@using RazorEngine.Text
@using QTD2.Infrastructure.Reports.Generation
@using QTD2.Infrastructure.ExtensionMethods
<style>
    a.pagerNumber {
        text-decoration: none;
        background-color: white;
        color: black;
    }

        a.pagerNumber:hover {
            text-decoration: none;
            background-color: cornflowerblue;
            color: white;
        }

    .table {
        font-family: Roboto, "Helvetica Neue", sans-serif;
    }

    .strip {
        margin: 10px 0px;
    }

    .strip-container .strip-dark {
        height: 10px;
        background-color: #e8e8e8;
    }

    tr.open-border-table-row th:first-child, tr.open-border-table-row td:first-child {
        padding-left: 0px !important;
        border-left: 0 !important;
    }

    tr.open-border-table-row th:last-child {
        border-right: 0 !important;
    }

    @@media print {
        .pager {
            display: none !important;
        }

        .strip-container .strip-dark {
            background-color: white;
        }
    }
    
    .notes-content ul {
        list-style-type: disc;
    }

    .notes-content ol {
        list-style-type: decimal;
    }
</style>
<table id="content-table" class="table" style="border-collapse: collapse">
    <tr>
        <td colspan="12" style="vertical-align: middle; text-align: center; border: none !important;">
            <div class="repeatedReportHeader" style="display: -webkit-box; display: flex; align-items: center; -webkit-box-pack: justify; justify-content: space-between; border-bottom: 3px solid #020378;">
                @if (!string.IsNullOrEmpty(Model.CompanyLogo))
                {
                    <div>
                        <img src="@Model.CompanyLogo" alt="Company logo" style="height: 46px;width: 65px;padding-bottom: 10px;float: left;width: 150px !important;height: 65px !important;object-fit: scale-down !important;" />
                    </div>
                }
                else
                {
                    <div></div>
                }
                <div style="text-align: center; "><b>@Model.Title </b></div>
                <div><b>Printed Date:</b> @DateTime.Now.ConvertToDefaultTimeZone(Model.DefaultTimeZone).ToShortDateString()</div>

            </div>
        </td>
    </tr>
    @if (Model.Positions.Count() > 0)
    {
        <tr style=" border-bottom: 2px solid #000; border-collapse: collapse" class="open-border-table-row">
            <td style="border: none; padding: 0px;" class="strip-container" colspan="7">
                @{int j = 1;}
                @foreach (var position in Model.Positions)
                {
                    <div class="@(j % 2 == 0 ? "strip-dark" : "")"></div>
                    <div style="padding:5px;" id="@("page" + j)" class="@(j % 2 == 0 ? "strip" : "")">
                        <table style="width:100% ;border-collapse:separate;border-spacing:0">
                            <tbody>
                                <tr>
                                    <td colspan="4" style="border: none !important; padding-top: 0; font-size: 18px ">
                                        <b> @position.PositionTitle (@position.PositionAbbreviation)</b>
                                    </td>
                                </tr>
                                <tr style=" border-bottom: 2px solid #000; border-collapse: collapse">

                                    <th style="border-bottom: 2px solid #000; border-top: 2px solid #000; border-right: 2px solid #000; border-collapse: collapse; padding : 5px " align="left">@("Employee".ReplaceLabel(Model.ClientSettings_LabelReplacements)) Name</th>
                                    @if (Model.DisplayColumns.Where(r => r == "Employee Email Address").Count() > 0)
                                    {
                                        <th style="border-bottom: 2px solid #000; border-top: 2px solid #000; border-right: 2px solid #000; border-collapse: collapse; padding: 5px " align="left">@("Employee".ReplaceLabel(Model.ClientSettings_LabelReplacements)) Email Address</th>
                                    }
                                    @if (Model.DisplayColumns.Where(r => r == "Employee Number").Count() > 0)
                                    {
                                        <th style="border-bottom: 2px solid #000; border-top: 2px solid #000; border-right: 2px solid #000; border-collapse: collapse; padding: 5px " align="left">@("Employee".ReplaceLabel(Model.ClientSettings_LabelReplacements)) Number</th>
                                    }
                                    @if (Model.DisplayColumns.Where(r => r == "Position Qualification Date").Count() > 0)
                                    {
                                        <th style="border-bottom: 2px solid #000; border-top: 2px solid #000; border-right: 2px solid #000; border-collapse: collapse; padding: 5px " align="left">@("Position".ReplaceLabel(Model.ClientSettings_LabelReplacements)) Qualification Date</th>
                                    }
                                    @if (Model.IncludeTrainee)
                                    {
                                        <th style="border-bottom: 2px solid #000; border-top: 2px solid #000; border-right: 2px solid #000; border-collapse: collapse; padding: 5px " align="left">Trainee</th>
                                    }
                                    @if (Model.DisplayColumns.Where(r => r == "Task Qualification Evaluator").Count() > 0)
                                    {
                                        <th style="border-bottom: 2px solid #000; border-top: 2px solid #000; border-right: 2px solid #000; border-collapse: collapse; padding: 5px " align="left">@("Task".ReplaceLabel(Model.ClientSettings_LabelReplacements)) Qualification Evaluator</th>
                                    }
                                    @if (Model.DisplayColumns.Where(r => r == "NERC Cert Type").Count() > 0)
                                    {
                                        <th style="border-bottom: 2px solid #000; border-top: 2px solid #000; border-right: 2px solid #000; border-collapse: collapse; padding: 5px " align="left">NERC Cert Type</th>
                                    }
                                    @if (Model.DisplayColumns.Where(r => r == "NERC Cert #").Count() > 0)
                                    {
                                        <th style="border-bottom: 2px solid #000; border-top: 2px solid #000; border-right: 2px solid #000; border-collapse: collapse; padding: 5px " align="left">NERC Cert #</th>
                                    }
                                    @if (Model.DisplayColumns.Where(r => r == "NERC Cert Issue Date").Count() > 0)
                                    {
                                        <th style="border-bottom: 2px solid #000; border-top: 2px solid #000; border-right: 2px solid #000; border-collapse: collapse; padding: 5px " align="left">NERC Cert Issue Date</th>
                                    }
                                    @if (Model.DisplayColumns.Where(r => r == "NERC Cert Recert Date").Count() > 0)
                                    {
                                        <th style="border-bottom: 2px solid #000; border-top: 2px solid #000; border-right: 2px solid #000; border-collapse: collapse; padding: 5px " align="left">NERC Cert Recert Date</th>
                                    }
                                    @if (Model.DisplayColumns.Where(r => r == "NERC Cert Expiration Date").Count() > 0)
                                    {
                                        <th style="border-bottom: 2px solid #000; border-top: 2px solid #000; border-right: 2px solid #000; border-collapse: collapse; padding: 5px " align="left">NERC Cert Expiration Date</th>
                                    }
                                    @if (Model.DisplayColumns.Where(r => r == "Employee Notes").Count() > 0)
                                    {
                                        <th style="border-bottom: 2px solid #000; border-top: 2px solid #000; border-collapse: collapse; padding: 5px " align="left">@("Employee".ReplaceLabel(Model.ClientSettings_LabelReplacements)) Notes</th>
                                    }
                                </tr>

                                @foreach (var employeePosition in position.EmployeePositions.Distinct().OrderBy(e => e.Employee.Person.LastName).ThenBy(e => e.Employee.Person.FirstName))
                                {
                                    @{
                                        var employees = employeePosition.Employee;
                                        var nercCert = employees.EmployeeCertifications.Where(r => r.Active && r.Certification.CertifyingBodyId == 1).FirstOrDefault();
                                    }

                            <tr>
                                <td style="border-bottom: 2px solid #000; padding: 5px ">@employees.Person.LastName, @employees.Person.FirstName </td>
                                 @if (Model.DisplayColumns.Where(r => r == "Employee Email Address").Count() > 0)
                                 {
                                     <td style=" border-bottom: 2px solid #000; padding: 5px">@employees?.Person?.Username</td>
                                 }
                                 @if (Model.DisplayColumns.Where(r => r == "Employee Number").Count() > 0)
                                 {
                                     <td style=" border-bottom: 2px solid #000; padding: 5px">@employees.EmployeeNumber</td>
                                 }

                                 @if (Model.DisplayColumns.Where(r => r == "Position Qualification Date").Count() > 0)
                                 {
                                     <td style="border-bottom: 2px solid #000; padding: 5px">  @employeePosition.QualificationDate?.ToShortDateString()</td>
                                 }
                                 else if (Model.DisplayColumns.Where(r => r == "Position Qualification Date").Count() > 0)
                                 {
                                     <td style=" border-bottom: 2px solid #000; padding: 5px"></td>
                                 }
                                 @if (Model.IncludeTrainee)
                                 {
                                     <td style=" border-bottom: 2px solid #000; padding: 5px">
                                         <input type="checkbox" disabled checked ="@employeePosition.Trainee"/>
                                     </td>
                                 }
                                 @if (Model.DisplayColumns.Where(r => r == "Task Qualification Evaluator").Count() > 0)
                                 {
                                     <td style="border-bottom: 2px solid #000; padding: 5px">@(employees.TQEqulator ? "Yes" : "No")</td>
                                 }
                                 @if (Model.DisplayColumns.Where(r => r == "NERC Cert Type").Count() > 0)
                                 {
                                     <td style="border-bottom: 2px solid #000; padding: 5px">@(nercCert == null ? "" : nercCert.Certification.CertAcronym)</td>
                                 }
                                 @if (Model.DisplayColumns.Where(r => r == "NERC Cert #").Count() > 0)
                                 {
                                     <td style="border-bottom: 2px solid #000; padding: 5px">@(nercCert == null ? "" : nercCert.CertificationNumber)</td>
                                 }
                                 @if (Model.DisplayColumns.Where(r => r == "NERC Cert Issue Date").Count() > 0)
                                 {
                                     <td style="border-bottom: 2px solid #000; padding: 5px">@(nercCert == null ? "" : nercCert.IssueDate.ToString("MM/dd/yyyy"))</td>
                                 }
                                 @if (Model.DisplayColumns.Where(r => r == "NERC Cert Recert Date").Count() > 0)
                                 {
                                        <td style="border-bottom: 2px solid #000; padding: 5px">@(nercCert == null ? "" : nercCert.RenewalDate.HasValue ? nercCert.RenewalDate.Value.ToString("MM/dd/yyyy") : "")</td>
                                 }
                                 @if (Model.DisplayColumns.Where(r => r == "NERC Cert Expiration Date").Count() > 0)
                                 {
                                        <td style="border-bottom: 2px solid #000; padding: 5px">@(nercCert == null ? "" : nercCert.ExpirationDate.HasValue ? nercCert.ExpirationDate.Value.ToString("MM/dd/yyyy") : "")</td>
                                 }
                                 @if (Model.DisplayColumns.Where(r => r == "Employee Notes").Count() > 0)
                                 {
                                    <td style="border-bottom: 2px solid #000; padding: 5px; list-style: initial;">
                                        <div class="notes-content">
                                            @(new RawString(employees.Notes))
                                        </div>
                                    </td>
                                 }
                                </tr>
                                }

                            </tbody>
                        </table>
                    </div>
                    @if (!position.Equals(Model.Positions.Last()))
                    {
                        <div style="page-break-after:always"></div>
                        <div class="@(j % 2 == 0 ? "strip-dark" : "")"></div>
                    }
                    @{j++;}
                }
            </td>
        </tr>

    }
    else
    {
        <tr style="border:none">
            <td style="border:none;text-align:center">
                <i>No data available to generate requested report</i>
            </td>
        </tr>
    }
</table>
<div class="pager pdf-remove" id="pager" style="display: flex; justify-content: flex-start; align-items: center; background-color: white; border-top: 1px solid #d5d3d366; width: 100%; max-width: 100%; overflow-x: auto; position: sticky; bottom: 0; right: 0px; overflow-y: hidden; white-space: nowrap; ">

    @for (int i = 1; i <= Model.Positions.Count(); i++)
    {
        <a href=@("#page"+i) class="pagerNumber" style="padding:0.9rem;">@i</a>
    }
</div>
