@using RazorEngine.Text
@using QTD2.Infrastructure.Reports.Generation
@using QTD2.Infrastructure.ExtensionMethods
@using System.Text.RegularExpressions
<style>

    .table {
        font-family: Roboto, "Helvetica Neue", sans-serif;
        color: #000;
        border-collapse: collapse;
        width: 100%;
    }

        .table .sub-title {
            font-family: inherit;
        }

    a.pagerNumber {
        text-decoration: none;
        background-color: white;
        color: black;
    }

        a.pagerNumber:hover {
            text-decoration: none;
            background-color: cornflowerblue;
            color: white;
        }

    .strip {
        margin: 10px 0px;
    }

    .strip-container .strip-dark {
        height: 10px;
        background-color: #e8e8e8;
    }

    @@media print {
        .pager {
            display: none !important;
        }

        .strip-container .strip-dark {
            background-color: white;
        }
    }
</style>

<table id="content-table" class="table" style="border-collapse: collapse; width:100%;margin:auto">
    <tr>
        <td colspan="12" style="vertical-align: middle; text-align: center; border: none !important;padding-bottom:0px">
            <div class="repeatedReportHeader" style="border-bottom: 3px solid #020378;padding-bottom:1px">
                <div style="display: -webkit-box; display: flex; align-items: center; -webkit-box-pack: justify; justify-content: space-between; border-bottom: 3px solid #020378;">
                    @if (!string.IsNullOrEmpty(Model.CompanyLogo))
                    {
                        <div style="width:18%">
                            <img src="@Model.CompanyLogo" alt="Company logo" style="height: 46px; width: 150px !important; height: 65px !important; object-fit: scale-down !important;" />
                        </div>
                    }
                    else
                    {
                        <div style="width:20%"></div>
                    }
                    <div style="width:60%">
                        <div style="text-align: center; font-size: 20px; color: #020378;padding-bottom: 7px;"><b>@Model.Title </b></div>
                        <div class ="sub-title" style="text-align: center; font-family: sans-serif !important; font-size: 18px; color: #020378;">@Model.DateRange[0].ToShortDateString() - @Model.DateRange[1].ToShortDateString()
                    </div>
                    </div>
                    <div style="text-align:right;width:22%;"><b>Printed Date:</b> @DateTime.Now.ConvertToDefaultTimeZone(Model.DefaultTimeZone).ToShortDateString()</div>
                </div>
            </div>
        </td>
    </tr>


    @if (Model.Positions.Count() > 0)
    {
        <tr>
            <td colspan="12" style="border: 0; padding: 0" class="strip-container">
                @{
                    int j = 1;
                }

                @foreach (var position in Model.Positions)
                {
                    <div class="@(j % 2 == 0 ? "strip-dark" : "")"></div>
                    <div style="padding:5px;" id="@("page" + j)" class="@(j % 2 == 0 ? "strip" : "")">
                        <table class="table" style="width:100% ;border-collapse:collapse;">
                            <tr>
                                <td colspan="12" style="border:none;">
                                    <table class="table" style="width:100% ;border-collapse:collapse;">
                                        <tr>
                                            @if (Model.DisplayColumns.Contains("Position"))
                                            {
                                                <td colspan="12" style="border:none;" ;>
                                                    <span><b style="font-size: 20px;">@("Position".ReplaceLabel(Model.ClientSettings_LabelReplacements))</b> : </span>
                                                    @{
                                                        <span>@position.PositionTitle</span>
                                                    }
                                                </td>
                                            }
                                        </tr>
                                    </table>
                                </td>
                            </tr>

                            @if (Model.Procedures.Count() > 0)
                            {
                                <tr>
                                    <td colspan="12" style="border:none; padding-bottom:10px;">
                                        <b style="font-size: 20px;color:#5EA5D7;text-decoration: underline;">
                                            @("Procedures".ReplaceLabel(Model.ClientSettings_LabelReplacements)):
                                        </b>
                                        <span style="padding-left: 10px;">
                                            @string.Join(", ", Model.Procedures.Select(p => p.Title))
                                        </span>
                                    </td>
                                </tr>
                                <tr>
                                    <td colspan="12" style="border:none;">
                                        <table style="width:100%;border-collapse: collapse;">
                                            <tr style="border-bottom: 2px solid #000; border-top: 2px solid #000;border-right: 1px solid #000;padding-top:1rem;">
                                                @if (Model.DisplayColumns.Contains("Employee Name"))
                                                {
                                                    <th style="border: 1px solid #000; text-align: center; width:5%;">
                                                        @("Employee".ReplaceLabel(Model.ClientSettings_LabelReplacements)) Name
                                                    </th>
                                                }
                                                @if (Model.DisplayColumns.Contains("Employee Number"))
                                                {
                                                    <th style="border: 1px solid #000; text-align: center; width:5%;">
                                                        @("Employee".ReplaceLabel(Model.ClientSettings_LabelReplacements)) #
                                                    </th>
                                                }
                                                @foreach (var procedure in Model.Procedures.OrderBy(r =>
                                               {
                                                   var match = Regex.Match(r.Number, @"^\d+");
                                                   if (match.Success)
                                                   {
                                                       return int.Parse(match.Value);
                                                   }
                                                   else
                                                   {
                                                       return int.MaxValue;
                                                   }
                                               }))
                                                {
                                                    <th style="border: 1px solid #000; text-align: center;">
                                                        @procedure.Number
                                                    </th>
                                                }
                                            </tr>

                                            @foreach (var employeePosition in position.EmployeePositions.OrderBy(ep => ep.Employee.Person.LastName))
                                            {
                                                <tr>
                                                    @if (Model.DisplayColumns.Contains("Employee Name"))
                                                    {
                                                        <td style="border: 1px solid #000; text-align: center;">
                                                            @employeePosition.Employee?.Person.FirstName, @employeePosition.Employee?.Person.LastName
                                                            @(employeePosition.Trainee ? "[Trainee]" : "")
                                                        </td>
                                                    }
                                                    @if (Model.DisplayColumns.Contains("Employee Number"))
                                                    {
                                                        <td style="border: 1px solid #000; text-align: center; width:5%">
                                                            @employeePosition.Employee.EmployeeNumber
                                                        </td>
                                                    }

                                                    @foreach (var procedure in Model.Procedures)
                                                    {
                                                        <td style="border: 1px solid #000; text-align: center;">
                                                            @{
                                                                var startDate = @Model.DateRange[0];
                                                                var endDate = @Model.DateRange[1];
                                                                var passedClassSchedule = employeePosition.Employee.ClassSchedule_Employee.Where(cse => cse.FinalGrade == "P" && cse.CompletionDate != null && cse.CompletionDate >= startDate && cse.CompletionDate <= endDate && cse.ClassSchedule.ILA.ILA_Procedure_Links.Any(pl => pl.ProcedureId == procedure.Id)).Any();
                                                                if (passedClassSchedule)
                                                                {
                                                                    <span>&#x2713;</span>
                                                                }
                                                            }
                                                        </td>
                                                    }
                                                </tr>
                                            }
                                        </table>
                                    </td>
                                </tr>
                            }

                            @if (Model.RegulatoryRequirements.Count() > 0)
                            {
                                <tr>
                                    <td colspan="12" style="border:none; padding-top:10px; padding-bottom: 10px">
                                        <b style="font-size: 20px;color:#5EA5D7;text-decoration: underline;">
                                            @("Regulatory Requirement".ReplaceLabel(Model.ClientSettings_LabelReplacements)):
                                        </b>
                                        <span style="padding-left: 10px;">
                                            @string.Join(", ", Model.RegulatoryRequirements.Select(p => p.Title))
                                        </span>
                                    </td>
                                </tr>
                                <tr>
                                    <td colspan="12" style="border:none;">
                                        <table style="width:100%;border-collapse: collapse;">
                                            <tr style="border-bottom: 2px solid #000; border-top: 2px solid #000;border-right: 1px solid #000;  padding-top:1rem;">
                                                @if (Model.DisplayColumns.Contains("Employee Name"))
                                                {
                                                    <th style="border: 1px solid #000; text-align: center; width:5%;">
                                                        @("Employee".ReplaceLabel(Model.ClientSettings_LabelReplacements)) Name
                                                    </th>
                                                }
                                                @if (Model.DisplayColumns.Contains("Employee Number"))
                                                {
                                                    <th style="border: 1px solid #000; text-align: center;  width:5%;">
                                                        @("Employee".ReplaceLabel(Model.ClientSettings_LabelReplacements)) #
                                                    </th>
                                                }


                                                @foreach (var regulatoryRequirement in Model.RegulatoryRequirements.OrderBy(r =>
                                               {
                                                   var match = Regex.Match(r.Number, @"^\d+");
                                                   if (match.Success)
                                                   {
                                                       return int.Parse(match.Value);
                                                   }
                                                   else
                                                   {
                                                       return int.MaxValue;
                                                   }
                                               }))
                                                {
                                                    <th style="border: 1px solid #000; text-align: center; width:5%">
                                                        @regulatoryRequirement.Number
                                                    </th>
                                                }
                                            </tr>

                                            @foreach (var employeePosition in position.EmployeePositions.OrderBy(ep => ep.Employee.Person.LastName))
                                            {
                                                <tr>
                                                    @if (Model.DisplayColumns.Contains("Employee Name"))
                                                    {
                                                        <td style="border: 1px solid #000; text-align: center;">
                                                            @employeePosition.Employee?.Person.FirstName, @employeePosition.Employee?.Person.LastName
                                                        </td>
                                                    }
                                                    @if (Model.DisplayColumns.Contains("Employee Number"))
                                                    {
                                                        <td style="border: 1px solid #000; text-align: center;">
                                                            @employeePosition.Employee.EmployeeNumber
                                                        </td>
                                                    }

                                                    @foreach (var regulatoryRequirement in Model.RegulatoryRequirements)
                                                    {
                                                        var passedClassSchedule = employeePosition.Employee.ClassSchedule_Employee.Where(cse => cse.FinalGrade == "P" && cse.CompletionDate != null && cse.CompletionDate >= @Model.DateRange[0] && cse.CompletionDate <= @Model.DateRange[1] && cse.ClassSchedule.ILA.ILA_RegRequirement_Links.Any(pl => pl.RegulatoryRequirementId == regulatoryRequirement.Id)).Any();

                                                        if (passedClassSchedule)
                                                        {
                                                            <td style="border: 1px solid #000; text-align: center;">
                                                                <span>&#x2713;</span> <!-- Checkmark -->
                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            <td style="border: 1px solid #000; text-align: center;">
                                                                <!-- Empty cell for no checkmark -->
                                                            </td>
                                                        }
                                                    }
                                                </tr>
                                            }
                                        </table>
                                    </td>
                                </tr>
                            }
                        </table>
                    </div>

                    @if (!position.Equals(Model.Positions.Last()))
                    {
                        <div style="page-break-after:always"></div>
                        <div class="@(j%2==0?"strip-dark":"")"></div>
                    }
                    @{
                        j++;
                    }
                }
            </td>
        </tr>
    }
    else
    {
        <tr style="border:none">
            <td style="border:none;text-align:center">
                <i>No data available to generate requested report</i>
            </td>
        </tr>
    }
</table>

<div class="pager pdf-remove" id="pager" style="display: flex; justify-content: flex-start; align-items: center; background-color: white; border-top: 1px solid #d5d3d366; width: 100%; max-width: 100%; overflow-x: auto; position: sticky; bottom: 0; right: 0px; overflow-y: hidden; white-space: nowrap; ">

    @for (int i = 1; i <= Model.Positions.Count(); i++)
    {
        <a href=@("#page"+i) class="pagerNumber" style="padding:0.9rem;">@i</a>
    }
</div>
