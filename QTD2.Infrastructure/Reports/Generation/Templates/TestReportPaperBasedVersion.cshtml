@using RazorEngine.Text
@using QTD2.Infrastructure.Reports.Generation
@using QTD2.Infrastructure.ExtensionMethods
@using System.Text.RegularExpressions;
<style>

    .table {
        font-family: Roboto, "Helvetica Neue", sans-serif;
        width: 100%;
        border-collapse: collapse;
        margin: 0;
        table-layout: fixed;
    }

    .inner-table {
        width: 99%;
        border-collapse: collapse;
        margin: 0;
        table-layout: fixed;
    }


    .table td, .table th {
        padding: 0;
    }

    a.pagerNumber {
        text-decoration: none;
        background-color: white;
        color: black;
    }

        a.pagerNumber:hover {
            text-decoration: none;
            background-color: cornflowerblue;
            color: white;
        }

    .strip {
        margin: 10px 0px;
    }

    .strip-container .strip-dark {
        height: 10px;
        background-color: #e8e8e8;
    }

    tr.open-border-table-row th:first-child, tr.open-border-table-row td:first-child {
        padding-left: 0px !important;
        border-left: 0 !important;
    }

    tr.open-border-table-row th:last-child {
        border-right: 0 !important;
    }

    .font-class, .font-class table {
        font-size: 16px;
    }

    .inline-block {
        display: inline-block;
    }

    .option-desc {
        display: -webkit-box;
        display: flex;
    }

    .ques-desc table td, .ques-desc table th {
        padding: 10px;
    }

    .ques-desc p {
        padding: 0 !important;
        margin: 0 !important;
    }

    .ques-desc img {
        width: 400px !important;
        height: auto !important;
        display: block !important;
        padding: 0 !important;
        margin: 0 !important;
        object-fit: cover;
        overflow: hidden;
    }

    .list-spacing li {
        padding: 5px 0;
    }

    @@media print {
        .pager {
            display: none !important;
        }

        .strip-container .strip-dark {
            background-color: white;
        }
    }
</style>

<table id="content-table" class="table" style="border-collapse: collapse">
    <tr>
        <td colspan="12" style="vertical-align: middle; margin:0  !important;;text-align: center; border: none !important;padding-bottom:0px">
            <div class="repeatedReportHeader" style="border-bottom: 3px solid #020378;padding-bottom:1px">
                <div style="display: -webkit-box; display: flex; align-items: center; -webkit-box-pack: justify; border-bottom: 3px solid #020378;padding-top:10px;">
                    @if (!string.IsNullOrEmpty(Model.CompanyLogo))
                    {
                        <div style="width: 25%;">
                            <img src="@Model.CompanyLogo" alt="Company logo" style="height: 46px;width: 65px;padding-bottom: 10px;float: left;width: 150px !important;height: 65px !important;object-fit: scale-down !important;" />
                        </div>
                    }
                    else
                    {
                        <div style="width: 20%;"></div>
                    }
                    <div style="width: 50%; text-align: center; font-size: 24px; color: #020378;">
                        <b style="margin: 0; padding: 0;">@Model.Title </b>
                    </div>
                    <div style="width: 25%;text-align: right;"><b>Printed Date:</b> @DateTime.Now.ConvertToDefaultTimeZone(Model.DefaultTimeZone).ToShortDateString()</div>
                </div>
            </div>
        </td>
    </tr>


    @if (Model.Tests.Count() > 0)
    {
        <tr>
            <td colspan="12" style="border: 0; padding: 0" class="strip-container font-class">
                @{
                    int j = 1;
                }

                @foreach (var test in Model.Tests)
                {
                    <div class="@(j % 2 == 0 ? "strip-dark" : "")"></div>
                    <div style="padding:5px;" id="@("page" + j)" class="@(j % 2 == 0 ? "strip" : "")">
                        <table style="width:100%">
                            @if (Model.DisplayColumns.Contains("Employee Name"))
                            {
                                <tr>
                                    <td style="border: none; padding: 10px;">
                                        <div style="display: -webkit-box;display: flex;gap:10px;width:100%">
                                            <div style="font-weight: 700;padding-right:10px;">Name:</div>
                                            <div style="border-bottom: 1px solid black;width:100%"></div>
                                        </div>
                                    </td>
                                </tr>
                            }
                            @if (Model.DisplayColumns.Contains("Certificate Number"))
                            {
                                <tr>
                                    <td style="border: none; padding: 10px;">
                                        <div style="display: -webkit-box;display: flex;gap:10px;width:100%">
                                            <div style="font-weight: 700;padding-right:10px;white-space:nowrap;">Certificate ID:</div>
                                            <div style="border-bottom: 1px solid black;width:100%"></div>
                                        </div>
                                    </td>
                                </tr>
                            }
                            @if (Model.DisplayColumns.Contains("Date"))
                            {
                                <tr>
                                    <td style="border: none; padding: 10px;">
                                        <div style="display: -webkit-box;display: flex;gap:10px;width:100%">
                                            <div style="font-weight: 700;padding-right:10px;">Date:</div>
                                            <div style="border-bottom: 1px solid black;width:100%"></div>
                                        </div>
                                    </td>
                                </tr>
                            }
                            @if (Model.DisplayColumns.Contains("ILA #"))
                            {
                                <tr>
                                    <td style="border: none; padding: 10px;">
                                        <div style="display: -webkit-box;display: flex;gap:10px">
                                            <div style="font-weight: 700;padding-right:10px;">@("ILA".ReplaceLabel(Model.ClientSettings_LabelReplacements)) #:</div>
                                            <div>@test.ILATraineeEvaluations?.FirstOrDefault()?.ILA?.Number</div>
                                        </div>
                                    </td>
                                </tr>
                            }
                            @if (Model.DisplayColumns.Contains("ILA Title"))
                            {
                                <tr>
                                    <td style="border: none; padding: 10px;">
                                        <div style="display: -webkit-box;display: flex;gap:10px">
                                            <div style="font-weight: 700;padding-right:10px;">@("ILA".ReplaceLabel(Model.ClientSettings_LabelReplacements)) Title:</div>
                                            <div>@test.ILATraineeEvaluations?.FirstOrDefault()?.ILA?.Name</div>
                                        </div>
                                    </td>
                                </tr>
                            }
                            @if (Model.DisplayColumns.Contains("Test Type"))
                            {
                                <tr>
                                    <td style="border: none; padding: 10px;">
                                        <div style="display: -webkit-box;display: flex;gap:10px">
                                            <div style="font-weight: 700;padding-right:10px;">Test Type:</div>
                                            <div>@test.ILATraineeEvaluations?.FirstOrDefault()?.TestType?.Description</div>
                                        </div>
                                    </td>
                                </tr>
                            }
                            @if (Model.DisplayColumns.Contains("Test Instructions"))
                            {
                                <tr>
                                    <td style="border: none; padding: 10px;">
                                        <div style="display: -webkit-box;display: flex;gap:10px">
                                            <div style="font-weight: 700;padding-right:10px;">Test Instruction:</div>
                                            <div>@test.ILATraineeEvaluations?.FirstOrDefault()?.TestInstruction</div>
                                        </div>
                                    </td>
                                </tr>
                            }
                            @if (Model.DisplayColumns.Contains("Test Time Limit"))
                            {
                                <tr>
                                    <td style="border: none; padding: 10px;">
                                        <div style="display: -webkit-box;display: flex;gap:10px">
                                            <div style="font-weight: 700;padding-right:10px;">Test Time Limit:</div>
                                            @if (test.ILATraineeEvaluations?.FirstOrDefault()?.TestTimeLimitHours != null && test.ILATraineeEvaluations?.FirstOrDefault()?.TestTimeLimitMinutes != null)
                                            {
                                                <div>
                                                    @test.ILATraineeEvaluations.FirstOrDefault().TestTimeLimitHours hr
                                                    @test.ILATraineeEvaluations.FirstOrDefault().TestTimeLimitMinutes min
                                                </div>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }

                            @foreach (var (testItemLink, index) in test.Test_Item_Links.Select((item, i) => (item, i)))
                            {
                                <tr>
                                    <td style="border: none;padding-top:20px">
                                        <table style="width:100%;table-layout:fixed;">
                                            <tr>
                                                <td style="width:10%;border: none;"></td>
                                                <td style="width:40%;border: none;padding-right:15px;">
                                                    @if (Model.DisplayColumns.Contains("Test Item ID"))
                                                    {
                                                        <span style="padding-right:10px;font-weight:700;">Test Item #:</span> @testItemLink.TestItem?.Number
                                                    }
                                                </td>
                                                <td style="width:40%;border: none;padding-left:15px">
                                                    @if (Model.DisplayColumns.Contains("Enabling Objective #"))
                                                    {
                                                        <span style="padding-right:10px;font-weight:700;">EO #:</span> @(testItemLink.TestItem?.EnablingObjective?.FullNumber ?? "N/A")
                                                    }
                                                </td>
                                                <td style="width:10%;border: none;"></td>
                                            </tr>
                                        </table>
                                    </td>
                                </tr>
                                @{

                                    var questionDescription = "";
                                    if (testItemLink.TestItem.TestItemTypeId == 2)
                                    {
                                        questionDescription = Regex.Replace(testItemLink.TestItem.Description, @"<u>(.*?)<\/u>", "_______");
                                    }
                                    else
                                    {
                                        questionDescription = testItemLink.TestItem.Description;
                                    }
                                }
                                <tr>
                                    <td style="border: none; padding: 10px;">
                                        <div style="display: -webkit-box;display: flex;gap:10px">
                                            <span>@(index+1).</span>
                                            <span class="ques-desc">@(new RawString(questionDescription))</span>
                                        </div>
                                    </td>
                                </tr>
                                @if (testItemLink.TestItem.TestItemTypeId == 1)
                                {
                                    <tr>
                                        <td style="padding: 0px; border: none !important; padding-left: 16px">
                                            <table style="width:100%;">
                                                @foreach (var testOptions in testItemLink.TestItem.TestItemMCQs.Select((value, index) => new { value, index }))
                                                {
                                                    char label = (char)('A' + testOptions.index);

                                                    @if (testOptions.value.IsCorrect && @Model.ShowCorrectAnswer)
                                                    {
                                                        <tr>
                                                            <td style="border:none;padding-left:50px" class="option-desc">
                                                                <span style="padding-right:5px;vertical-align:top">@label. </span><span class="ques-desc @(testOptions.value.ChoiceDescription.Contains("<p>")  ? "inline-block" : "")"><b>@(new RawString(testOptions.value.ChoiceDescription))</b></span>
                                                            </td>
                                                        </tr>
                                                    }
                                                    else
                                                    {
                                                        <tr>
                                                            <td style="border:none;padding-left:50px" class="option-desc">
                                                                <span style="padding-right:5px;vertical-align:top">@label. </span><span class="ques-desc @(testOptions.value.ChoiceDescription.Contains("<p>") ? "inline-block" : "")">@(new RawString(testOptions.value.ChoiceDescription))</span>
                                                            </td>
                                                        </tr>
                                                    }
                                                }
                                            </table>
                                        </td>
                                    </tr>
                                }
                                else if (testItemLink.TestItem.TestItemTypeId == 2)
                                {
                                    <tr>
                                        <td style="padding: 0px; border: none !important; padding-left: 16px">
                                            @foreach (var testblanks in testItemLink.TestItem.TestItemFillBlanks)
                                            {
                                                @if (@Model.ShowCorrectAnswer)
                                                {
                                                    <span style="padding-left:50px;"><b>@(new RawString(testblanks.Correct))</b></span>
                                                }
                                            }
                                        </td>
                                    </tr>
                                }
                                else if (testItemLink.TestItem.TestItemTypeId == 3)
                                {
                                    <tr>
                                        <td style="padding: 0px; border: none !important; padding-left: 16px">
                                            <table style="width:100%">
                                                @foreach (var testOptions in testItemLink.TestItem.TestItemTrueFalses.Select((value, index) => new { value, index }))
                                                {
                                                    char label = (char)('A' + testOptions.index);

                                                    @if (testOptions.value.IsCorrect && @Model.ShowCorrectAnswer)
                                                    {
                                                        <tr>
                                                            <td style="border:none;padding-left:50px">
                                                                <span style="padding-right:5px">@label. </span><span><b>@(new RawString(testOptions.value.Choices))</b></span>
                                                            </td>
                                                        </tr>
                                                    }
                                                    else
                                                    {
                                                        <tr>
                                                            <td style="border:none;padding-left:50px">
                                                                <span style="padding-right:5px">@label. </span><span>@(new RawString(testOptions.value.Choices))</span>
                                                            </td>
                                                        </tr>
                                                    }
                                                }
                                            </table>
                                        </td>
                                    </tr>
                                }
                                else if (testItemLink.TestItem.TestItemTypeId == 4)
                                {
                                    <tr>
                                        <td style="padding: 0px; border: none !important; padding-left: 16px">
                                            <table style="width:100%">
                                                @foreach (var testOptions in testItemLink.TestItem.TestItemShortAnswers.Select((value, index) => new { value, index }))
                                                {
                                                    char label = (char)('A' + testOptions.index);

                                                    @if (Model.ShowCorrectAnswer)
                                                    {
                                                        <tr>
                                                            <td style="border:none;padding-left:50px" class="option-desc">
                                                                <span style="padding-right:5px;vertical-align:top">@label. </span><span class="ques-desc"><b>@(new RawString(testOptions.value.Responses))</b></span>
                                                            </td>
                                                        </tr>
                                                    }
                                                }
                                            </table>
                                        </td>
                                    </tr>
                                }
                                else if (testItemLink.TestItem.TestItemTypeId == 5)
                                {
                                    <tr>
                                        <td style="padding: 0px; border: none !important; padding-left: 16px">
                                            <table style="width:100%">
                                                @foreach (var testOptions in testItemLink.TestItem.TestItemMatches.Select((value, index) => new { value, index }).OrderBy(m => m.value.MatchValue))
                                                {
                                                    <tr>
                                                        @if (testOptions.value.ChoiceDescription != "")
                                                        {
                                                            <td style="border:none;padding-left:50px;width:50%">
                                                                <span style="vertical-align:top">@char.ToLower(testOptions.value.MatchValue). </span>
                                                                <span class="ques-desc">
                                                                    <b>@(new RawString(testOptions.value.ChoiceDescription))</b>
                                                                </span>
                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            <td style="border:none;width:50%"></td>
                                                        }
                                                        <td style="border:none;padding-left:50px;width:50%">
                                                            <span style="vertical-align:top">@testOptions.value.MatchValue. </span>
                                                            <span class="ques-desc">
                                                                <b>@(new RawString(testOptions.value.MatchDescription))</b>
                                                            </span>
                                                        </td>
                                                    </tr>
                                                }
                                                @if (@Model.ShowCorrectAnswer)
                                                {
                                                    <tr>
                                                        <td style="border:none;padding-top: 10px;padding-left:50px;">
                                                            @foreach (var testitems in testItemLink.TestItem.TestItemMatches.Where(x => x.MatchDescription != "" && x.ChoiceDescription != "").OrderBy(m => m.MatchValue))
                                                            {
                                                                <span> @Char.ToLower(testitems.MatchValue).<b>(@testitems.CorrectValue) &nbsp;</b></span>
                                                            }
                                                        </td>
                                                    </tr>
                                                }
                                            </table>
                                        </td>
                                    </tr>
                                }
                                else if (testItemLink.TestItem.TestItemTypeId == 6)
                                {
                                    <tr>
                                        <td style="padding: 0px; border: none !important; padding-left: 16px">
                                            <table style="width:100%">
                                                @foreach (var testOptions in testItemLink.TestItem.TestItemMCQs.Select((value, index) => new { value, index }))
                                                {
                                                    char label = (char)('A' + testOptions.index);

                                                    @if (testOptions.value.IsCorrect && @Model.ShowCorrectAnswer)
                                                    {
                                                        <tr>
                                                            <td style="border:none;padding-left:50px" class="option-desc">
                                                                <span style="padding-right:5px;vertical-align:top">@label. </span><span class="ques-desc @(testOptions.value.ChoiceDescription.Contains("<p>")  ? "inline-block" : "")"><b>@(new RawString(testOptions.value.ChoiceDescription))</b></span>
                                                            </td>
                                                        </tr>
                                                    }
                                                    else
                                                    {
                                                        <tr>
                                                            <td style="border:none;padding-left:50px" class="option-desc">
                                                                <span style="padding-right:5px;vertical-align:top">@label. </span><span class="ques-desc @(testOptions.value.ChoiceDescription.Contains("<p>") ? "inline-block" : "")">@(new RawString(testOptions.value.ChoiceDescription))</span>
                                                            </td>
                                                        </tr>
                                                    }
                                                }
                                            </table>
                                        </td>
                                    </tr>
                                }
                            }
                            <tr></tr>
                        </table>
                    </div>

                    @if (!test.Equals(Model.Tests.Last()))
                    {
                        <div style="page-break-after:always"></div>
                        <div class="@(j%2==0?"strip-dark":"")"></div>
                    }
                    @{
                        j++;
                    }
                }
            </td>
        </tr>
    }
    else
    {
        <tr style="border:none">
            <td style="border:none;text-align:center">
                <i>No data available to generate requested report</i>
            </td>
        </tr>
    }
</table>

<div class="pager pdf-remove" id="pager" style="display: flex; justify-content: flex-start; align-items: center; background-color: white; border-top: 1px solid #d5d3d366; width: 100%; max-width: 100%; overflow-x: auto; position: sticky; bottom: 0; right: 0px; overflow-y: hidden; white-space: nowrap; ">

    @for (int i = 1; i <= Model.Tests.Count(); i++)
    {
        <a href=@("#page"+i) class="pagerNumber" style="padding:0.9rem;">@i</a>
    }
</div>
