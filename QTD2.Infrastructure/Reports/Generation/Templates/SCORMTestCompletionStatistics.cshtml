@using RazorEngine.Text
@using QTD2.Infrastructure.Reports.Generation
@using QTD2.Infrastructure.ExtensionMethods
<style>


    .table {
        font-family: Roboto, "Helvetica Neue", sans-serif;
        color: #000;
        border-collapse: collapse;
        width: 100%;
    }

    a.pagerNumber {
        text-decoration: none;
        background-color: white;
        color: black;
    }

        a.pagerNumber:hover {
            text-decoration: none;
            background-color: cornflowerblue;
            color: white;
        }

    .strip {
        margin: 10px 0px;
    }

    .strip-container .strip-dark {
        height: 10px;
        background-color: #e8e8e8;
    }

    tr.open-border-table-row th:first-child, tr.open-border-table-row td:first-child {
        padding-left: 0px !important;
        border-left: 0 !important;
    }

    tr.open-border-table-row th:last-child {
        border-right: 0 !important;
    }

    @@media print {
        .pager {
            display: none !important;
        }

        .strip-container .strip-dark {
            background-color: white;
        }
    }

    .bar-container {
        width: 100%;
        margin-bottom: 20px;
    }

    .bar {
        position: relative;
        height: 30px;
        width: 100%;
        border: 2px solid #e0e0e0;
        border-radius: 5px;
        display: flex;
        flex-direction: row;
        overflow: hidden;
    }

    .correct {
        background-color: #3A6598;
        height: 100%;
        border-radius: 5px 0 0 5px;
    }

    .incorrect {
        background-color: #EFA252;
        height: 100%;
        border-radius: 0 5px 5px 0;
    }

    .percentage-text {
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        color: #fff;
        font-weight: bold;
        font-size: 14px;
    }

    .legend {
        display: flex;
        flex-direction: row;
        justify-content: flex-start;
        margin-top: 10px;
    }

    .legend-item {
        display: flex;
        align-items: center;
        margin-right: 15px;
    }

    .blue-box {
        width: 15px;
        height: 15px;
        background-color: #3A6598;
        margin-right: 5px;
    }

    .orange-box {
        width: 15px;
        height: 15px;
        background-color: #EFA252;
        margin-right: 5px;
    }

    .legend-text {
        font-size: 12px;
    }

    .bar-container .legend {
        margin-left: 20px;
    }
</style>

<table id="content-table" class="table" style="border-collapse: collapse">
    <tr>
        <td colspan="12" style="vertical-align: middle; text-align: center; border: none !important;">
            <div class="repeatedReportHeader" style="padding-bottom: 0px; border-bottom: 2px solid #020378; margin: 0 0 10px 0;">
                <div style="display: -webkit-box; display: flex; align-items: center; -webkit-box-pack: justify; justify-content: space-between; border-bottom: 4px solid #020378; margin: 0 0 3px 0;">
                    @if (!string.IsNullOrEmpty(Model.CompanyLogo))
                    {
                        <div>
                            <img src="@Model.CompanyLogo" alt="Company logo" style="height: 46px;width: 65px;padding-bottom: 10px;float: left;width: 150px !important;height: 65px !important;object-fit: scale-down !important;" />
                        </div>
                    }
                    else
                    {
                        <div></div>
                    }
                    <div style="text-align: center; font-size: 24px; color: #020378; "><b>@Model.Title </b></div>
                    <div><b>Printed Date:</b>@DateTime.Now.ConvertToDefaultTimeZone(Model.DefaultTimeZone).ToShortDateString()</div>
                </div>
            </div>
        </td>
    </tr>

    @if (Model.ClassSchedules.Count() > 0)
    {
        <tr>
            <td style="border:none;padding-top:0;" class="strip-container">
                @{
                    int j = 1;
                }

                @foreach (var classSchedule in Model.ClassSchedules)
                {
                    <div class="@(j % 2 == 0 ? "strip-dark" : "")"></div>
                    <div id="@("page" + j)" class="@(j % 2 == 0 ? "strip" : "") row">
                        <table style="width:100% ;border-collapse:collapse;table-layout: fixed;">
                            <tr>
                                <td colspan="12" style="border:none;">
                                    <table style="width:100%">
                                        <tr>
                                            @if (Model.DisplayColumns.Where(r => r == "ILA Title").Count() > 0)
                                            {
                                                <td colspan="12" style="border: none !important;">
                                                    <b>@("ILA".ReplaceLabel(Model.ClientSettings_LabelReplacements)) Title :</b>
                                                    <span>@classSchedule?.ILA?.Name</span>
                                                </td>
                                            }
                                        </tr>

                                        <tr>
                                            @if (Model.DisplayColumns.Where(r => r == "ILA Number").Count() > 0)
                                            {
                                                <td colspan="12" style="border: none !important;">
                                                    <b>@("ILA".ReplaceLabel(Model.ClientSettings_LabelReplacements)) Number :</b>
                                                    <span> @classSchedule?.ILA?.Number</span>
                                                </td>
                                            }
                                        </tr>
                                        <tr>
                                            @if (Model.DisplayColumns.Where(r => r == "Class Start and End Date").Count() > 0 || Model.DisplayColumns.Where(r => r == "Class Start and End Time").Count() > 0)
                                            {
                                                <td colspan="12" style="border: none !important;">
                                                    <b>Class Start date:</b>
                                                    <span>@(Model.DisplayColumns.Where(r => r == "Class Start and End Date").Count() > 0 ? classSchedule?.StartDateTime.ConvertToDefaultTimeZone(Model.DefaultTimeZone).ToString(Model.DefaultDateFormat) : "") @(Model.DisplayColumns.Where(r => r == "Class Start and End Time").Count() > 0 ? classSchedule?.StartDateTime.ConvertToDefaultTimeZone(Model.DefaultTimeZone).ToLongTimeString() : "")</span>
                                                </td>
                                            }
                                        </tr>
                                        <tr>
                                            @if (Model.DisplayColumns.Where(r => r == "Class Start and End Date").Count() > 0 || Model.DisplayColumns.Where(r => r == "Class Start and End Time").Count() > 0)
                                            {
                                                <td colspan="12" style="border: none !important;">
                                                    <b>Class End date:</b>
                                                    <span>@(Model.DisplayColumns.Where(r => r == "Class Start and End Date").Count() > 0 ? classSchedule?.EndDateTime.ConvertToDefaultTimeZone(Model.DefaultTimeZone).ToString(Model.DefaultDateFormat) : "") @(Model.DisplayColumns.Where(r => r == "Class Start and End Time").Count() > 0 ? classSchedule?.EndDateTime.ConvertToDefaultTimeZone(Model.DefaultTimeZone).ToLongTimeString() : "")</span>
                                                </td>
                                            }
                                        </tr>
                                        @if (Model.DisplayColumns.Where(r => r == "CBT Test Response Bar Chart").Count() > 0)
                                        {
                                            <tr>
                                                <td colspan="12" style="border: none !important;">
                                                    <b>CBT Test Response Statistics:</b>

                                                    @{
                                                        var activeCbt = classSchedule.ILA?.CBTs?.FirstOrDefault(cbt => cbt.Active);
                                                        var scormUpload = activeCbt?.ScormUploads?.FirstOrDefault(upload => upload.Active && upload.ScormStatus == "Uploaded");
                                                    }

                                                    @if (scormUpload != null)
                                                    {
                                                        if (scormUpload?.CBT_ScormUpload_Question != null)
                                                        {
                                                            @foreach (var question in scormUpload.CBT_ScormUpload_Question)
                                                            {
                                                                if (question?.CBT_ScormUpload_Question_Choices != null)
                                                                {
                                                                    var totalResponses = question.CBT_ScormUpload_Question_Choices?
                                                                    .Sum(choice => choice.CBT_ScormRegistration_Responses.Where(r => r.CBT_ScormRegistration?.ClassScheduleEmployee.ClassScheduleId == classSchedule.Id).Count());

                                                                    var correctResponses = question.CBT_ScormUpload_Question_Choices?
                                                                    .Where(choice => choice.CorrectChoice == true)?
                                                                    .Sum(choice => choice.CBT_ScormRegistration_Responses.Where(r => r.CBT_ScormRegistration.ClassScheduleEmployee.ClassScheduleId == classSchedule.Id).Count());

                                                                    var correctPercentage = totalResponses > 0 ? (correctResponses * 100.0) / totalResponses : 0;
                                                                    var incorrectPercentage = 100 - correctPercentage;

                                                                    <div class="bar" style="position: relative; border-radius: 5px; overflow: hidden;">
                                                                        @if (@correctPercentage > 0)
                                                                        {
                                                                            <div class="correct"
                                                                                 style="width: @correctPercentage%; background-color: #3A6598; position: absolute; height: 100%; display:flex;justify-content:center;left: 0;">
                                                                                <span class="percentage-text correct-text"
                                                                                      style=" color: white; font-weight: bold;line-height: 1;padding:5px;display:block;position: unset;transform: unset;">
                                                                                    @correctPercentage?.ToString("F1")%
                                                                                </span>
                                                                             </div>
                                                                           
                                                                        }
                                                                        @if (@incorrectPercentage > 0)
                                                                        {
                                                                            <div class="incorrect"
                                                                                 style="width: @incorrectPercentage%; background-color: #EFA252; position: absolute; height: 100%; display:flex;justify-content:center;left: @correctPercentage%;">
                                                                                <span class="percentage-text incorrect-text"
                                                                                      style="color: white; font-weight: bold;line-height: 1;padding:5px;display:block;position: unset;transform: unset;">
                                                                                    @incorrectPercentage?.ToString("F1")%
                                                                                </span>
                                                                            </div>
                                                                        }
                                                                    </div>



                                                                }
                                                            }
                                                            <div class="legend" style="display:-webkit-box; display: flex;">
                                                                <div class="legend-item" style="display:-webkit-box; display: flex;align-items: center;">
                                                                    <div style="width: 15px; height: 15px; background-color: #3A6598; margin-right: 5px;"></div>
                                                                    <div class="legend-text">Correct</div>
                                                                </div>
                                                                <div class="legend-item" style="display:-webkit-box; display: flex;align-items: center;">
                                                                    <div style="width: 15px; height: 15px; background-color: #EFA252; margin-right: 5px;"></div>
                                                                    <div class="legend-text">Incorrect</div>
                                                                </div>
                                                            </div>
                                                        }
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    </table>
                                </td>
                            </tr>
                        </table>

                        <table style="width:100% ;border-collapse:collapse;table-layout: fixed;">
                            <tr>
                                <td colspan="12" style="border:none;padding-top:0;">
                                    <table style="width:100%">
                                        <tr>
                                            <td style="border: none;"> <b> CBT Test Response Details</b></td>
                                        </tr>
                                        <tr>
                                            <td style="border: none; padding-left: 1rem;color:#2D89CB"> <b>Test Question & Distractors</b></td>
                                        </tr>

                                        @{
                                            var activecbt = classSchedule.ILA?.CBTs?.FirstOrDefault(cbt => cbt.Active);
                                            var uploadedScorm = activecbt?.ScormUploads?.FirstOrDefault(upload => upload.Active && upload.ScormStatus == "Uploaded");
                                            int questionCount = 1;
                                        }

                                        @if (uploadedScorm != null)
                                        {
                                            if (uploadedScorm?.CBT_ScormUpload_Question != null)
                                            {
                                                @foreach (var question in uploadedScorm.CBT_ScormUpload_Question)
                                                {
                                                    <tr>
                                                        <td colspan="12" style="border: none; padding-left: 2rem;">
                                                            @questionCount. @question?.Description
                                                        </td>
                                                    </tr>
                                                    <tr class="open-border-table-row">
                                                        <th style="border-top: 1px solid; padding: 5px; width:33%" align="left"></th>
                                                        @if (Model.DisplayColumns.Where(r => r == "# Selected Answer").Count() > 0)
                                                        {
                                                            <th align="left" style=" border-top: 1px solid; padding: 5px; width: 33% "># Selected</th>
                                                        }
                                                        @if (Model.DisplayColumns.Where(r => r == "Employee Name").Count() > 0)
                                                        {
                                                            <th align="left" style=" border-top: 1px solid; padding: 5px; width: 33% ">
                                                                Employee Name
                                                            </th>
                                                        }
                                                    </tr>
                                                    if (question?.CBT_ScormUpload_Question_Choices != null)
                                                    {
                                                        @foreach (var choice in question.CBT_ScormUpload_Question_Choices)
                                                        {
                                                            
                                                            var responses = choice.CBT_ScormRegistration_Responses.Where(r => r.CBT_ScormRegistration.ClassScheduleEmployee.ClassScheduleId == classSchedule.Id);
                                                            
                                                            <tr class="open-border-table-row">
                                                                <td style="border: none; padding: 5px;">
                                                                    @if (choice.CorrectChoice)
                                                                    {
                                                                        <span>@choice?.Choice?.CleanCBTScormQuestionChoice()</span>
                                                                        <span style="color: green;"><b>(CORRECT ANSWER)</b></span>
                                                                    }
                                                                    else
                                                                    {
                                                                        <span>@choice?.Choice?.CleanCBTScormQuestionChoice()</span>
                                                                    }
                                                                </td>
                                                                @if (Model.DisplayColumns.Where(r => r == "# Selected Answer").Any())
                                                                {
                                                                    <td style="border: none; padding: 5px;">@responses.Count() </td>
                                                                }

                                                                @if (Model.DisplayColumns.Where(r => r == "Employee Name").Any())
                                                                {
                                                                    <td style="border: none; padding: 5px;">
                                                                        @foreach (var response in responses.OrderBy(r => r.CBT_ScormRegistration?.ClassScheduleEmployee?.Employee?.Person?.LastName ?? string.Empty))
                                                                        {
                                                                            var registration = response?.CBT_ScormRegistration;
                                                                            var employee = registration?.ClassScheduleEmployee?.Employee;
                                                                            var person = employee?.Person;

                                                                            if (person != null)
                                                                            {
                                                                                <p>@person.FirstName @person.LastName</p>
                                                                            }
                                                                        }
                                                                    </td>
                                                                }
                                                            </tr>
                                                        }
                                                    }
                                                    questionCount++;
                                                }
                                            }
                                        }
                                    </table>
                                </td>
                            </tr>
                        </table>
                    </div>

                    @if (!classSchedule.Equals(Model.ClassSchedules.Last()))
                    {
                        <div style="page-break-after:always"></div>
                        <div class="@(j % 2 == 0 ? "strip-dark" : "")"></div>
                    }
                    @{
                        j++;
                    }
                }
            </td>
        </tr>
    }
</table>
<div class="pager" style="display: flex; justify-content: flex-start; align-items: center; background-color: white; border-top: 1px solid #d5d3d366; width: 100%; max-width: 100%; overflow-x: auto; position: sticky; bottom: 0; right: 0px; overflow-y: hidden; white-space: nowrap; ">

    @for (int i = 1; i <= Model.ClassSchedules.Count(); i++)
    {
        <a href=@("#page"+i) class="pagerNumber" style="padding:0.9rem;">@i</a>
    }
</div>