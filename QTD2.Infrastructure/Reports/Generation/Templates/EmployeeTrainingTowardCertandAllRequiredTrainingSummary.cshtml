@using RazorEngine.Text
@using QTD2.Infrastructure.Reports.Generation
@using QTD2.Infrastructure.ExtensionMethods
<style>
    .table {
        font-family: Roboto, "Helvetica Neue", sans-serif;
        color: #000;
        border-collapse: collapse;
        width: 100%;
    }

    a.pagerNumber {
        text-decoration: none;
        background-color: white;
        color: black;
    }

        a.pagerNumber:hover {
            text-decoration: none;
            background-color: cornflowerblue;
            color: white;
        }

    .strip {
        margin: 10px 0px;
    }

    .strip-container .strip-dark {
        height: 10px;
        background-color: #e8e8e8;
    }

    @@media print {
        .pager {
            display: none !important;
        }

        .strip-container .strip-dark {
            background-color: white;
        }
    }
</style>

@{
    var groupedCertificationStatuses = Model.CertificationFulfillmentStatuses
        .Where(cfs => cfs != null)
        .GroupBy(cfs => cfs.EmployeeId)
        .OrderBy(group => group.First().EmployeeLastName)
        .ToList();
}

<table id="content-table" class="table" style="border-collapse: collapse;width:100%">
    <tr>
        <td colspan="12" style="vertical-align: middle; text-align: center; border: none !important;">

            <div class="repeatedReportHeader" style="display: -webkit-box; display: flex; align-items: center; -webkit-box-pack: justify; justify-content: space-between; border-bottom: 3px solid #020378;">

                @if (!string.IsNullOrEmpty(Model.CompanyLogo))
                {
                    <div>
                        <img src="@Model.CompanyLogo" alt="Company logo" style="height: 46px;width: 65px;padding-bottom: 10px;float: left;width: 150px !    important;height: 65px !important;object-fit: scale-down !important;" />
                    </div>
                }
                else
                {
                    <div></div>
                }
                <div style="text-align: center;word-break:break-word;width:60%;">
                    <b style="display: block; color: #020378; font-weight: bold; font-size: 16px; text-align: center; margin-top: 8px;">@Model.Title </b>
                </div>
                <div><b>Printed Date:</b>@DateTime.Now.ConvertToDefaultTimeZone(Model.DefaultTimeZone).ToShortDateString()</div>
            </div>
        </td>
    </tr>

    @if (groupedCertificationStatuses.Count() > 0)
    {
        <tr>
            <td colspan="12" style="border: 0; padding: 0 !important;" class="strip-container">
                @{int j = 1;}
                @foreach (var certStatus in groupedCertificationStatuses)
                {
                    var firstItem = certStatus.First();
                    var employeeLastName = firstItem.EmployeeLastName;
                    var employeeFirstName = firstItem.EmployeeFirstName;
                    var employeeNumber = firstItem.Employee?.EmployeeNumber;

                    <div class="@(j % 2 == 0 ? "strip-dark" : "")"></div>
                    <div style="padding:5px;" id="@("page" + j)" class="@(j % 2 == 0 ? "strip" : "")">
                        <table style="width:100% ;border-collapse:collapse;">
                            <tr>
                                <td style=" border: none !important;">
                                    <table style="width:100%">
                                        <tr>
                                            <td style="border: none !important; width: 40%; vertical-align: top;">
                                                <table style="width: 100%; border-collapse: collapse;">
                                                    <tr>
                                                       <td style="border: none !important; font-size: 1rem;">
                                                           @if (Model.DisplayColumns.Contains("Employee Name"))
                                                           {
                                                                   <b>@("Employee".ReplaceLabel(Model.ClientSettings_LabelReplacements)):</b>
                                                                   <b style="padding-left:.4rem"> @employeeLastName, @employeeFirstName</b>
                                                           }
                                                           @if (Model.DisplayColumns.Contains("Employee Number"))
                                                           {
                                                                   <b style="padding-left: .2rem;">(@("Employee".ReplaceLabel(Model.ClientSettings_LabelReplacements)) #:</b>
                                                                   <b style="padding-left: 5px">@employeeNumber)</b>
                                                           }
                                                       </td>
                                                    </tr>
                                                    <tr>
                                                        @if (Model.DisplayColumns.Contains("Positions"))
                                                        {
                                                            @{
                                                                var posTitleList = certStatus.SelectMany(cfs => cfs.Employee.EmployeePositions.Select(ep => ep.Position.PositionTitle)).Distinct().ToList();
                                                            }
                                                            <td style="border: none !important; font-size: 1rem; padding-right: 10px;">
                                                                <b>@("Position".ReplaceLabel(Model.ClientSettings_LabelReplacements))s:</b>
                                                                <span style="font-size: 1rem; padding-left: 5px">
                                                                    <b>@(new RawString(string.Join(",", posTitleList)))</b>
                                                                </span>
                                                            </td>
                                                        }
                                                    </tr>
                                                </table>
                                            </td>
                                            <td style="border: none !important; width: 20%; vertical-align: top;">
                                                <table style="width: 100%; border-collapse: collapse;">
                                                    <tr>
                                                        @{
                                                            var certAcronyms = certStatus.Where(cfs => cfs.CertificationCertifyingBody == "NERC").Select(cfs => cfs.CertificationAcronym).Distinct().ToList();
                                                        }
                                                        <td style="border: none !important; font-size: 1rem; padding-left: 1rem;">
                                                            <b>Cert Area: </b>
                                                            <span style="font-size: 1rem; padding-left: 5px">
                                                                <b>@(new RawString(string.Join(",", certAcronyms)))</b>
                                                            </span>
                                                        </td>
                                                    </tr>
                                                </table>
                                            </td>

                                            <td style=" border: none !important; width: 40%">
                                                @if (Model.DisplayColumns.Where(r => r == "Show Certificate Details").Count() > 0)
                                                {
                                                    <div style="padding-right:8px;flex:0 0 40%">
                                                        <div style="text-align: center;word-break:break-word;width:60%;padding-bottom:8px">
                                                            <b style="display: block;font-weight: bold; font-size: 16px; text-align: left;">Show Certificate Details </b>
                                                        </div>
                                                        <div>
                                                            <table class="table">
                                                                <tr style="border-bottom: 2px solid #000; border-top: 2px solid #000; border-collapse: collapse;">

                                                                    <th style="border-bottom: 2px solid #000; border-left: 1px solid #000; border-right: 1px solid #000; border-top: 2px solid #000; text-align: left; vertical-align: bottom; padding: 5px;">
                                                                        Requirements
                                                                    </th>
                                                                    <th style="border-bottom: 2px solid #000; border-right: 1px solid #000; border-top: 2px solid #000; text-align: left; vertical-align:bottom; padding: 5px;">
                                                                        Hours
                                                                    </th>
                                                                    <th style="border-bottom: 2px solid #000; border-right: 1px solid #000; border-top: 2px solid #000; text-align: left; vertical-align:bottom; padding: 5px;">
                                                                        Duration
                                                                    </th>

                                                                </tr>
                                                                @{
                                                                    var groupedByDuration = certStatus
                                                                        .GroupBy(cfs => cfs.CertificationId == Model.EmergencyResponseCertificationId ? "Per Calendar Year"
                                                                                        : $"Within {cfs.CertificationRenewalInterval} Years from Cert Date")
                                                                        .ToList();
                                                                }
                                                                @foreach (var durationGroup in groupedByDuration)
                                                                {
                                                                    @foreach (var item in durationGroup)
                                                                    {
                                                                        <tr style="border-bottom: 2px solid #000; border-left: 1px solid #000; border-right: 1px solid #000;">
                                                                            <td style="border: none; padding: 5px; vertical-align: top; text-align: left;">
                                                                                @{
                                                                                    var requirement = item.CertificationId == Model.EmergencyResponseCertificationId ? "EOP**"
                                                                                        : $"{item.CertificationAcronym}={item.CertificationName}";
                                                                                }
                                                                                @requirement
                                                                            </td>
                                                                            <td style="border: none; padding: 5px; vertical-align: top; text-align: left;">
                                                                                @item.RequiredHours
                                                                            </td>
                                                                            <td style="border: none; padding: 5px; vertical-align: top; text-align: left;">
                                                                                @{
                                                                                    var duration = item.CertificationId == Model.EmergencyResponseCertificationId
                                                                                        ? "Per Calendar Year"
                                                                                        : $"Within {item.CertificationRenewalInterval} Years from Cert Date";
                                                                                }
                                                                                @duration
                                                                            </td>
                                                                        </tr>
                                                                    }

                                                                    @{
                                                                        var simulationSum = durationGroup.Sum(dg => dg.SubRequirements
                                                                            .Where(sr => sr.CertificationSubRequirementName == "Simulations")
                                                                            .Sum(sr => sr.RequiredHours));

                                                                        var standardsSum = durationGroup.Sum(dg => dg.SubRequirements
                                                                            .Where(sr => sr.CertificationSubRequirementName == "Standards")
                                                                            .Sum(sr => sr.RequiredHours));
                                                                    }

                                                                    @if (simulationSum > 0)
                                                                    {
                                                                        <tr style="border-bottom: 2px solid #000; border-left: 1px solid #000; border-right: 1px solid #000;">
                                                                            <td style="border: none; padding: 5px; vertical-align: top; text-align: left;">
                                                                                Simulation
                                                                            </td>
                                                                            <td style="border: none; padding: 5px; vertical-align: top; text-align: left;">
                                                                                @simulationSum
                                                                            </td>
                                                                            <td style="border: none; padding: 5px; vertical-align: top; text-align: left;">
                                                                                @{
                                                                                    var duration = durationGroup.Key;
                                                                                }
                                                                                @duration
                                                                            </td>
                                                                        </tr>
                                                                    }
                                                                    @if (standardsSum > 0)
                                                                    {
                                                                        <tr style="border-bottom: 2px solid #000; border-left: 1px solid #000; border-right: 1px solid #000;">
                                                                            <td style="border: none; padding: 5px; vertical-align: top; text-align: left;">
                                                                                NERC Standards
                                                                            </td>
                                                                            <td style="border: none; padding: 5px; vertical-align: top; text-align: left;">
                                                                                @standardsSum
                                                                            </td>
                                                                            <td style="border: none; padding: 5px; vertical-align: top; text-align: left;">
                                                                                @{
                                                                                    var duration = durationGroup.Key;
                                                                                }
                                                                                @duration
                                                                            </td>
                                                                        </tr>
                                                                    }
                                                                }
                                                            </table>
                                                        </div>
                                                    </div>
                                                }
                                            </td>
                                        </tr>
                                    </table>
                                </td>
                            </tr>

                            @if (Model.DisplayColumns.Where(r => r == "Show Employee Certification Details").Count() > 0)
                            {
                                <tr>
                                    <td colspan="6" style="border: 0; padding-top: 1rem;" class="strip-container">
                                        <div style="text-align: center; word-break: break-word; width: 60%; padding-bottom: 8px">
                                            <b style="display: block; font-weight: bold; font-size: 16px; text-align: left; margin-top: 8px;">Show Employee Certification Details</b>
                                        </div>
                                        <table class="table">
                                            <tr style="border-bottom: 2px solid #000; border-top: 2px solid #000; border-collapse: collapse;">

                                                <th style="border-bottom: 2px solid #000; border-right: 1px solid #000; border-left: 1px solid #000; border-top: 2px solid #000; text-align: left; vertical-align: bottom; padding: 5px;">
                                                    Cert Type
                                                </th>
                                                <th style="border-bottom: 2px solid #000; border-right: 1px solid #000; border-top: 2px solid #000; text-align: left; vertical-align:bottom; padding: 5px;">
                                                    Number
                                                </th>
                                                <th style="border-bottom: 2px solid #000; border-right: 1px solid #000; border-top: 2px solid #000; text-align: left; vertical-align:bottom; padding: 5px;">
                                                    Issue Date
                                                </th>
                                                <th style="border-bottom: 2px solid #000; border-right: 1px solid #000; border-top: 2px solid #000; text-align: left; vertical-align:bottom; padding: 5px;">
                                                    Recert Date
                                                </th>
                                                <th style="border-bottom: 2px solid #000; border-right: 1px solid #000; border-top: 2px solid #000; text-align: left; vertical-align:bottom; padding: 5px;">
                                                    Exp. Date
                                                </th>
                                            </tr>

                                            @foreach (var item in certStatus)
                                            {
                                                <tr style="border-bottom: 2px solid #000; border-left: 1px solid #000; border-right: 1px solid #000; ">
                                                    <td style="border: none; padding: 5px; vertical-align: top; text-align: left;">
                                                        @{
                                                            var certType = item.CertificationCertifyingBody == "NERC" ? "NERC" : item.CertificationName;
                                                        }
                                                        @certType
                                                    </td>
                                                    <td style="border: none; padding: 5px; vertical-align: top; text-align: left;">
                                                        @item.CertificationNumber
                                                    </td>
                                                    <td style="border: none; padding: 5px; vertical-align: top; text-align: left;">
                                                        @item.IssueDate.ToShortDateString()
                                                    </td>
                                                    <td style="border: none; padding: 5px; vertical-align: top; text-align: left;">
                                                        @(item.RenewalDate.HasValue ? item.RenewalDate.Value.ToShortDateString() : "")
                                                    </td>
                                                    <td style="border: none; padding: 5px; vertical-align: top; text-align: left;">
                                                        @(item.ExpirationDate.HasValue ? item.ExpirationDate.Value.ToShortDateString() : "")
                                                    </td>
                                                </tr>
                                            }
                                        </table>
                                    </td>
                                </tr>
                            }
                            <tr>
                                <td style="border: 0; padding-top: 1rem;" class="strip-container">
                                    <table class="table">
                                        <tr style="border-collapse: collapse;">
                                            <div style="text-align: center; word-break: break-word; width: 60%; padding-bottom: 8px">
                                                <b style="display: block; font-weight: bold; font-size: 16px; text-align: left; margin-top: 8px;">Completion Summary</b>
                                            </div>
                                            <td style="border:none !important" rowspan="2"></td>
                                            <th style="border-bottom: 2px solid #000; border-left: 2px solid #000; border-top: 2px solid #000; border-right: 1px solid #000; text-align: center; vertical-align: bottom; padding: 5px;" colspan="3">
                                                NERC CEHs
                                            </th>
                                            <th style="border-bottom: 2px solid #000; border-top: 2px solid #000; border-right: 1px solid #000; text-align: center; vertical-align: bottom; padding: 5px;">
                                                PER-005
                                            </th>
                                            <th style="border-bottom: 2px solid #000; border-top: 2px solid #000; border-right: 1px solid #000; text-align: center; vertical-align: bottom; padding: 5px;" colspan="3">
                                                Certifications
                                            </th>
                                        </tr>
                                        <tr>
                                            <th style="border-bottom: 2px solid #000; border-left: 2px solid #000; border-right: 1px solid #000; text-align: center; vertical-align: bottom; padding: 5px;">
                                                TOTAL
                                            </th>
                                            <th style="border-bottom: 2px solid #000; border-right: 1px solid #000; text-align: center; vertical-align: bottom; padding: 5px;">
                                                Std.
                                            </th>
                                            <th style="border-bottom: 2px solid #000; text-align: center; border-right: 1px solid #000; vertical-align: bottom; padding: 5px;">
                                                Sim
                                            </th>
                                            <th style="border-bottom: 2px solid #000; text-align: center; border-right: 1px solid #000; vertical-align: bottom; padding: 5px;">
                                                EOP
                                            </th>
                                            <th style="border-bottom: 2px solid #000; text-align: center; border-right: 1px solid #000; vertical-align: bottom; padding: 5px;">
                                                Reg
                                            </th>
                                            <th style="border-bottom: 2px solid #000; text-align: center; border-right: 1px solid #000; vertical-align: bottom; padding: 5px;">
                                                Reg2
                                            </th>
                                            <th style="border-bottom: 2px solid #000; text-align: center; border-right: 1px solid #000; vertical-align: bottom; padding: 5px;">
                                                Other
                                            </th>
                                        </tr>
                                        @{
                                            double totalCompleted = certStatus.Where(x => x.CertificationCertifyingBody == "NERC").SelectMany(x => x.FulfillmentRecords).Sum(x => x.CEHAwarded);
                                            double totalStandards = certStatus.Where(x => x.CertificationCertifyingBody == "NERC").SelectMany(x => x.SubRequirements).Where(sr => sr.CertificationSubRequirementName == "Standards").Sum(sr => sr.RequiredHours);
                                            double totalSimulations = certStatus.Where(x => x.CertificationCertifyingBody == "NERC").SelectMany(x => x.SubRequirements).Where(sr => sr.CertificationSubRequirementName == "Simulations").Sum(sr => sr.RequiredHours);

                                            double totalRequiredHours = certStatus.Where(x => x.CertificationCertifyingBody == "NERC").Sum(x => x.RequiredHours);
                                            double totalStandardHours = certStatus.Where(x => x.CertificationCertifyingBody == "NERC").SelectMany(x => x.SubRequirements)
                                                                      .Where(sr => sr.CertificationSubRequirementName == "Standards").Sum(sr => sr.RequiredHours);
                                            double totalSimulationsHours = certStatus.Where(cfs => cfs.CertificationCertifyingBody == "NERC").SelectMany(cfs => cfs.SubRequirements)
                                                                         .Where(sr => sr.CertificationSubRequirementName == "Simulations").Sum(sr => sr.RequiredHours);

                                            double stillRequiredTotal = totalRequiredHours - totalCompleted;
                                            double stillRequiredStandards = totalStandardHours - totalStandards;
                                            double stillRequiredSimulations = totalSimulationsHours - totalSimulations;

                                            int currentYear = DateTime.Now.Year;
                                            var totalCompletedCurrentYear = certStatus.Where(cfs => cfs.CertificationId == Model.EmergencyResponseCertificationId).SelectMany(cfs => cfs.FulfillmentRecords).Where(fr => fr.ClassCompletionDate.HasValue && fr.ClassCompletionDate.Value.Year == currentYear).Sum(fr => fr.CEHAwarded);

                                            var totalRequiredCertification = certStatus.FirstOrDefault(cfs => cfs.CertificationId == Model.EmergencyResponseCertificationId);

                                            string totalRequired = totalRequiredCertification != null ? totalRequiredCertification.RequiredHours.ToString() : "N/A";

                                            double stillRequiredEOp = totalRequired != "N/A" ? double.Parse(totalRequired) - totalCompletedCurrentYear : double.NaN;

                                            var stillReqEop = double.IsNaN(stillRequiredEOp) ? "N/A" : stillRequiredEOp.ToString();

                                            double totalCompletedReg = certStatus.Where(cfs => cfs.CertificationId == Model.RegCertificationId).SelectMany(cfs => cfs.FulfillmentRecords)
                                                                                                                       .Sum(fr => fr.CEHAwarded);

                                            double totalCompletedReg2 = certStatus.Where(cfs => cfs.CertificationId == Model.Reg2CertificationId).SelectMany(cfs => cfs.FulfillmentRecords)
                                                                        .Sum(fr => fr.CEHAwarded);

                                            double totalCompletedOther = certStatus.Where(cfs => cfs.CertificationId == Model.OtherCertificationId).SelectMany(cfs => cfs.FulfillmentRecords)
                                                                           .Sum(fr => fr.CEHAwarded);

                                            var totalRequiredRegCert = certStatus.Where(cfs => cfs.CertificationId == Model.RegCertificationId).FirstOrDefault();
                                            string totalRequiredReg = totalRequiredRegCert != null ? totalRequiredRegCert.RequiredHours.ToString() : "N/A";

                                            var totalRequiredReg2Cert = certStatus.Where(cfs => cfs.CertificationId == Model.Reg2CertificationId).FirstOrDefault();
                                            string totalRequiredReg2 = totalRequiredReg2Cert != null ? totalRequiredReg2Cert.RequiredHours.ToString() : "N/A";

                                            var totalRequiredOtherCert = certStatus.Where(cfs => cfs.CertificationId == Model.OtherCertificationId).FirstOrDefault();
                                            string totalRequiredOther = totalRequiredOtherCert != null ? totalRequiredOtherCert.RequiredHours.ToString() : "N/A";

                                            double stillRequiredReg = totalRequiredReg != "N/A" ? double.Parse(totalRequiredReg) - totalCompletedReg : double.NaN;
                                            var stillReqReg = double.IsNaN(stillRequiredReg) ? "N/A" : stillRequiredReg.ToString();

                                            double stillRequiredReg2 = totalRequiredReg2 != "N/A" ? double.Parse(totalRequiredReg2) - totalCompletedReg2 : double.NaN;
                                            var stillReqReg2 = double.IsNaN(stillRequiredReg2) ? "N/A" : stillRequiredReg2.ToString();

                                            double stillRequiredOther = totalRequiredOther != "N/A" ? double.Parse(totalRequiredOther) - totalCompletedOther : double.NaN;
                                            var stillReqOther = double.IsNaN(stillRequiredOther) ? "N/A" : stillRequiredOther.ToString();

                                            double totalRolloverHours = Model.CertificationFulfillmentStatuses.Where(cfs => cfs.CertificationCertifyingBody == "NERC")
                                                                                                .Sum(cfs => cfs.RolloverHours);

                                        }

                                        <tr>
                                            <td style="border-top: 2px solid #000; padding: 5px; border-left: 1px solid #000; text-align: left;"><b>Total Completed</b></td>
                                            <td style="border-left: 1px solid #000; padding: 5px; vertical-align: top; text-align: center;">@totalCompleted</td>
                                            <td style="padding: 5px; vertical-align: top; text-align: center;">@totalStandards</td>
                                            <td style="padding: 5px; vertical-align: top; text-align: center; border-right: 1px solid #000;">@totalSimulations</td>
                                            <td style="padding: 5px; vertical-align: top; text-align: center; border-right: 1px solid #000;">@totalCompletedCurrentYear</td>
                                            <td style="padding: 5px; vertical-align: top; text-align: center;">@totalCompletedReg</td>
                                            <td style="padding: 5px; vertical-align: top; text-align: center;">@totalCompletedReg2</td>
                                            <td style="padding: 5px; vertical-align: top; text-align: center;border-right: 1px solid #000;">@totalCompletedOther</td>
                                        </tr>

                                        <tr>
                                            <td style="padding: 5px; border-top:none !important; border-left: 1px solid #000; text-align: left;"><b>Roll-over hours</b></td>
                                            <td style="border-left: 1px solid #000; border-top: none !important; padding: 5px; vertical-align: top; text-align: center;">@totalRolloverHours</td>
                                            <td style="border-top: none !important; padding: 5px; vertical-align: top; text-align: center;"></td>
                                            <td style="border-top: none !important; padding: 5px; vertical-align: top; text-align: center; border-right: 1px solid #000;"></td>
                                            <td style="border-top: none !important; padding: 5px; vertical-align: top; text-align: center; border-right: 1px solid #000;"></td>
                                            <td style="border-top: none !important; padding: 5px; vertical-align: top; text-align: center;"></td>
                                            <td style="border-top: none !important; padding: 5px; vertical-align: top; text-align: center;"></td>
                                            <td style="border-top: none !important; padding: 5px; vertical-align: top; text-align: center; border-right: 1px solid #000;"></td>
                                        </tr>
                                        <tr>
                                            <td style="padding: 5px; border-top: none !important; border-left: 1px solid #000; text-align:left;"><b>Total Required</b></td>
                                            <td style="border-left: 1px solid #000; border-top: none !important; padding: 5px; vertical-align: top; text-align: center;">@totalRequiredHours</td>
                                            <td style="border-top: none !important; padding: 5px; vertical-align: top; text-align: center;">@totalStandardHours</td>
                                            <td style="border-top: none !important; padding: 5px; vertical-align: top; text-align: center; border-right: 1px solid #000;">@totalSimulationsHours</td>
                                            <td style="border-top: none !important; padding: 5px; vertical-align: top; text-align: center; border-right: 1px solid #000;">@totalRequired</td>
                                            <td style="border-top: none !important; padding: 5px; vertical-align: top; text-align: center;">@totalRequiredReg </td>
                                            <td style="border-top: none !important; padding: 5px; vertical-align: top; text-align: center;">@totalRequiredReg2 </td>
                                            <td style="border-top: none !important; padding: 5px; vertical-align: top; text-align: center; border-right: 1px solid #000;">@totalRequiredOther</td>
                                        </tr>
                                        <tr style="border-bottom: 2px solid #000;">
                                            <td style="border-top: 2px solid #000; padding: 5px; border-left: 1px solid #000; text-align:left;"><b>Still Required</b></td>
                                            <td style="border-top: 2px solid #000; border-left: 1px solid #000; padding: 5px; vertical-align: top; text-align: center;">@stillRequiredTotal</td>
                                            <td style="border-top: 2px solid #000; padding: 5px; vertical-align: top; text-align: center;">@stillRequiredStandards</td>
                                            <td style="border-top: 2px solid #000; padding: 5px; vertical-align: top; text-align: center; border-right: 1px solid #000;">@stillRequiredSimulations</td>
                                            <td style="border-top: 2px solid #000; padding: 5px; vertical-align: top; text-align: center; border-right: 1px solid #000;">@stillReqEop</td>
                                            <td style="border-top: 2px solid #000; padding: 5px; vertical-align: top; text-align: center;">@stillReqReg</td>
                                            <td style="border-top: 2px solid #000; padding: 5px; vertical-align: top; text-align: center;">@stillReqReg2</td>
                                            <td style="border-top: 2px solid #000; padding: 5px; vertical-align: top; text-align: center; border-right: 1px solid #000;">@stillReqOther</td>
                                        </tr>
                                    </table>
                                </td>
                            </tr>

                        </table>
                    </div>
                    @if (!certStatus.Equals(groupedCertificationStatuses.Last()))
                    {
                        <div style="page-break-after:always"></div>
                        <div class="@(j % 2 == 0 ? "strip-dark" : "")"></div>
                    }
                    @{j++;}
                }
            </td>
        </tr>
    }
    else
    {
        <tr style="border:none">
            <td style="border:none;text-align:center">
                <i>No data available to generate requested report</i>
            </td>
        </tr>
    }
</table>
<div class="pager pdf-remove" id="pager" style="display: flex; justify-content: flex-start; align-items: center; background-color: white; border-top: 1px solid #d5d3d366; width: 100%; max-width: 100%; overflow-x: auto; position: sticky; bottom: 0; right: 0px; overflow-y: hidden; white-space: nowrap; ">

    @for (int i = 1; i <= groupedCertificationStatuses.Count(); i++)
    {
        <a href=@("#page"+i) class="pagerNumber" style="padding:0.9rem;">@i</a>
    }
</div>