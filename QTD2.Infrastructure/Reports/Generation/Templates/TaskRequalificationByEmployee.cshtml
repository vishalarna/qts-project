@using QTD2.Infrastructure.Reports.Generation
@using QTD2.Infrastructure.ExtensionMethods
@using QTD2.Domain.Helpers;
<style>
    .table {
        font-family: Roboto, "Helvetica Neue", sans-serif;
    }

    .position-table tr:first-child td {
        padding-top: 0px !important;
    }


    tr.open-border-table-row th:first-child, tr.open-border-table-row td:first-child {
        padding-left: 0px !important;
        border-left: 0 !important;
    }

    tr.open-border-table-row th:last-child {
        border-right: 0 !important;
    }

    a.pagerNumber {
        text-decoration: none;
        background-color: white;
        color: black;
    }

        a.pagerNumber:hover {
            text-decoration: none;
            background-color: cornflowerblue;
            color: white;
        }

    .strip {
        margin: 10px 0px;
    }

    .strip-container .strip-dark {
        height: 10px;
        background-color: #e8e8e8;
    }

    @@media print {
        .pager {
            display: none !important;
        }

        .strip-container .strip-dark {
            background-color: white;
        }
    }
</style>

<table id="content-table" class="table" width="100%" style="border-bottom:1px solid #000;">
    <tr>
        <td colspan="12" style="vertical-align: middle; margin:0  !important;text-align: center; border: none !important;padding-bottom:0px">
            <div class="repeatedReportHeader" style="border-bottom: 3px solid #020378;padding-bottom:1px">
                <div style="display: -webkit-box; display: flex; align-items: center; -webkit-box-pack: justify;-webkit-box-align:center; border-bottom: 3px solid #020378;padding-top:10px;">
                    @if (!string.IsNullOrEmpty(Model.CompanyLogo))
                    {
                        <div style="width: 25%;">
                            <img src="@Model.CompanyLogo" alt="Company logo" style="height: 46px;width: 65px;padding-bottom: 10px;float: left;width: 150px !important;height: 65px !important;object-fit: scale-down !important;" />
                        </div>
                    }
                    else
                    {
                        <div style="width: 20%;"></div>
                    }
                    <div style="width: 50%; text-align: center; font-size: 24px; color: #020378;">
                        <b>@Model.Title </b>
                        <span style="display: block; color: #020378; font-weight: bold; font-size: 16px; margin-top: 8px;"><b>Time Period for Task Revisions:</b> @Model.TRStartDate.ToShortDateString() - @Model.TREndDate.ToShortDateString()</span>
                    </div>
                    <div style="width: 25%;text-align: right;"><b>Printed Date:</b> @DateTime.Now.ConvertToDefaultTimeZone(Model.DefaultTimeZone).ToShortDateString()</div>
                </div>
            </div>
        </td>
    </tr>
    @if (Model.Employees.Count() > 0)
    {
        <tr style=" border-collapse: collapse;">
            <td colspan="12" style="border: none; padding:0px 13px; border-collapse: collapse;" class="strip-container">
                <table style="width: 100%; border-collapse: collapse; width:100%;">
                    @{
                        int j = 1;
                    }
                    <tr>
                        <td style="border:0;padding-top:0">
                            @foreach (var employee in Model.Employees)
                            {
                                <div class="@(j%2==0?"strip-dark":"")"></div>
                                <div style="padding: 0.8rem 0rem; padding-top:0" id="@("page" + j)" class="@(j%2==0?"strip":"")">
                                    <table style="width:100%;">
                                        <tr>

                                            <td colspan="5" style=" border: none !important; font-size: 1.4rem; font-weight: 600; padding-bottom: 0; padding-top: 0; padding-left: 0;">
                                                <div style="display:flex">

                                                    <b style="display:inline-block;color:#800000"> @("Employee".ReplaceLabel(Model.ClientSettings_LabelReplacements)):&nbsp; </b><b style="color: #800000;">@employee.Person.LastName, @employee.Person.FirstName</b>
                                                </div>
                                            </td>
                                        </tr>
                                        <tr style="border: 1px solid #000; margin: 5px 0;"></tr>

                                        @if (Model.DisplayColumns.Where(r => r == "Position").Count() > 0)
                                        {
                                            <tr>
                                                <td colspan="12" style=" border: none !important; font-size: 1.4rem; font-weight: 600;padding:0;">
                                                    <table style="border-collapse:collapse" class="position-table">
                                                        @foreach (var employeePosition in employee.EmployeePositions.Where(r => r.Active && r.Position.Active))
                                                        {
                                                            <tr>
                                                                <td style=" border: none !important; padding: 0px; padding-top: 5px; font-size: 20px;">
                                                                    <b style="display:inline-block;">
                                                                        @("Position".ReplaceLabel(Model.ClientSettings_LabelReplacements))s:
                                                                    </b>
                                                                    <b>@employeePosition.Position.PositionTitle </b>
                                                                </td>
                                                            </tr>
                                                            <tr>
                                                                @if (Model.DisplayColumns.Where(r => r == "Qualification Date").Count() > 0)
                                                                {
                                                                    <td style="border: none !important; font-size: 16px; padding: 0px; ">
                                                                        <b style="min-width:195px">
                                                                            Date Qualified for @("Position".ReplaceLabel(Model.ClientSettings_LabelReplacements))s:
                                                                        </b>
                                                                        @employeePosition.QualificationDate?.ToShortDateString()
                                                                    </td>
                                                                }
                                                            </tr>
                                                        }
                                                    </table>
                                                </td>
                                            </tr>
                                        }
                                        <tr>
                                            <td colspan="12" style=" border: none !important; font-size: 1.4rem;padding:0; padding-bottom: 3px; padding-left: 0;">
                                                <div style="display:flex">
                                                    <i style="font-size:16px;">
                                                        Includes required qualifications for @("Task".ReplaceLabel(Model.ClientSettings_LabelReplacements))s which are newly added to the @("Position".ReplaceLabel(Model.ClientSettings_LabelReplacements))
                                                        or newly made Reliablity Related
                                                    </i>
                                                </div>
                                            </td>
                                        </tr>

                                        <tr style=" border-bottom: 0; border-collapse: collapse;" class="open-border-table-row">
                                            @if (Model.DisplayColumns.Where(r => r == "Task Number").Count() > 0)
                                            {
                                                <th style="border: 1px solid #000; padding: 10px;">@("Task".ReplaceLabel(Model.ClientSettings_LabelReplacements)) #</th>
                                            }
                                            @if (Model.DisplayColumns.Where(r => r == "Task Description").Count() > 0)
                                            {
                                                <th style="border: 1px solid #000; padding: 10px; ">@("Task".ReplaceLabel(Model.ClientSettings_LabelReplacements)) Description</th>
                                            }
                                            @if (Model.DisplayColumns.Where(r => r == "Task Revision Date").Count() > 0)
                                            {
                                                <th style="border: 1px solid #000; padding: 10px; text-align:center"> @("Task".ReplaceLabel(Model.ClientSettings_LabelReplacements)) Revision Date </th>
                                            }
                                            @if (Model.DisplayColumns.Where(r => r == "Requalification Date").Count() > 0)
                                            {
                                                <th style="border: 1px solid #000; padding: 10px;  text-align: center"> Requalification Date</th>
                                            }
                                            @if (Model.DisplayColumns.Where(r => r == "ILA ID").Count() > 0)
                                            {
                                                <th style="border: 1px solid #000; padding: 10px;  text-align: center"> @("ILA".ReplaceLabel(Model.ClientSettings_LabelReplacements)) ID <div>(if applicable)</div> </th>
                                            }
                                            @if (Model.DisplayColumns.Where(r => r == "Requalification Status").Count() > 0)
                                            {
                                                <th style="border: 1px solid #000; padding: 10px; text-align: center "> Requalification Status </th>
                                            }
                                        </tr>

                                        @foreach (var employeePosition in employee.EmployeePositions.Where(r => r.Active && r.Position.Active))
                                        {
                                            @foreach (var task in employeePosition.Position.Position_Tasks.Where(pt => pt?.Task != null && pt.Task.SubdutyArea != null && pt.Task.SubdutyArea.DutyArea != null && pt.Task.TaskQualifications != null && pt.Task.TaskQualifications.Any() && pt.Task.Version_Tasks.Any(vt => vt.RequalificationRequired == true)).Select(pt => pt.Task).Distinct().OrderBy(t => t.SubdutyArea.DutyArea.Letter).ThenBy(t => t.SubdutyArea.DutyArea.Number).ThenBy(t => t.SubdutyArea.SubNumber).ThenBy(t => t.Number))
                                            {
                                                @{
                                                    var taskQualifications = task?.TaskQualifications?.Where(r => r.EmpId == employee.Id && r.TaskQualificationDate.HasValue && r.CriteriaMet == true && DateOnly.FromDateTime(r.TaskQualificationDate.Value) > task.EffectiveDate).OrderBy(r => r.TaskQualificationDate).FirstOrDefault();
                                                }

                                                <tr class="open-border-table-row" style="">
                                                    @if (Model.DisplayColumns.Contains("Task Number"))
                                                    {
                                                        <td style="border: none !important; padding: 5px 5px; vertical-align: top;text-align:center font-weight: 500;"> @task.SubdutyArea.DutyArea.Letter@task.SubdutyArea.DutyArea.Number.@task.SubdutyArea.SubNumber.@task.Number</td>
                                                    }
                                                    @if (Model.DisplayColumns.Where(r => r == "Task Description").Count() > 0)
                                                    {
                                                        <td style=" border: none !important; padding: 5px 5px; text-align:center; vertical-align: top; font-weight: 500;">@task.Description</td>
                                                    }
                                                    @if (Model.DisplayColumns.Where(r => r == "Task Revision Date").Count() > 0)
                                                    {
                                                        <td style=" border: none !important; padding: 5px 5px; vertical-align: top;text-align:center; font-weight: 500;">@(task.EffectiveDate == DateOnly.MinValue ? "" : task.EffectiveDate.ToShortDateString())</td>
                                                    }
                                                    @if (Model.DisplayColumns.Where(r => r == "Requalification Date").Count() > 0)
                                                    {
                                                        <td style=" border: none !important; text-align: center;vertical-align: top; padding:5px 5px;">@taskQualifications?.TaskQualificationDate?.ToShortDateString()</td>
                                                    }
                                                    @if (Model.DisplayColumns.Where(r => r == "ILA ID").Count() > 0)
                                                    {
                                                        <td style="border: none !important; text-align: center;vertical-align: top; padding: 5px 5px;">
                                                            @string.Join(", ", task?.ILA_TaskObjective_Links?.Where(link => link?.ILA != null).Select(link => link?.ILA?.Name) ?? Enumerable.Empty<string>())
                                                        </td>
                                                    }
                                                    @if (Model.DisplayColumns.Contains("Requalification Status"))
                                                    {
                                                        string status = "";
                                                        var emp = employee;
                                                        var posQualDate = employeePosition?.QualificationDate;
                                                        var today = DateOnly.FromDateTime(DateTime.Now);

                                                        var taskQualificationsList = task?.TaskQualifications?.Where(r => r.EmpId == employeePosition.EmployeeId && r.TaskQualificationDate.HasValue).ToList();
                                                        bool hasInitialQualification = taskQualificationsList?.Any(q => q.CriteriaMet == true) == true;
                                                        var requalVersion = task?.Version_Tasks?.Where(vt => vt.RequalificationRequired == true && vt.EffectiveDate.HasValue && vt.RequalificationDueDate.HasValue).OrderByDescending(vt => vt.EffectiveDate.Value).FirstOrDefault();
                                                        var requalEffectiveDate = requalVersion?.EffectiveDate;
                                                        var requalDueDate = requalVersion?.RequalificationDueDate;
                                                        var hasRequalificationAfterRevision = taskQualificationsList?.Any(q => q.CriteriaMet == true && DateOnly.FromDateTime(q.TaskQualificationDate.Value) > requalEffectiveDate) == true;

                                                        if (!hasInitialQualification)
                                                        {
                                                            if (posQualDate.HasValue || (employeePosition?.Trainee ?? false))
                                                                status = "Initial Qualification Pending";
                                                            else
                                                                status = "No Position Qualification Date";
                                                        }
                                                        else if (hasInitialQualification && !hasRequalificationAfterRevision && requalDueDate.HasValue)
                                                        {
                                                            if (today > requalDueDate.Value)
                                                                status = "Requalification Overdue";
                                                            else
                                                                status = "Requalification Pending";
                                                        }
                                                        else if (hasRequalificationAfterRevision && requalDueDate.HasValue)
                                                        {
                                                            var requalDate = taskQualificationsList?.Where(q => q.CriteriaMet == true && q.TaskQualificationDate.HasValue).Select(q => DateOnly.FromDateTime(q.TaskQualificationDate.Value)).OrderByDescending(d => d).FirstOrDefault();
                                                            if (requalDate <= requalDueDate)
                                                                status = "Requalification On Time";
                                                            else
                                                                status = "Requalification Delayed";
                                                        }
                                                        else
                                                        {
                                                            status = "Requalification Pending";
                                                        }
                                                        <td style="padding: 5px 5px; text-align: center;vertical-align: top; font-weight: 500; border:none">@status</td>
                                                    }
                                                </tr>
                                            }
                                        }
                                    </table>
                                </div>

                                @if (!employee.Equals(Model.Employees.Last()))
                                {
                                    <div style="page-break-after:always"></div>
                                    <div class="@(j % 2 == 0 ? "strip-dark" : "")"></div>
                                }
                                @{
                                    j++;
                                }

                            }
                        </td>
                    </tr>

                </table>
            </td>
        </tr>
    }
    else
    {
        <tr style="border:none">
            <td style="border:none;text-align:center">
                <i>No data available to generate requested report</i>
            </td>
        </tr>
    }
</table>
<div class="pager" style="display: flex; justify-content: flex-start; align-items: center; background-color: white; border-top: 1px solid #d5d3d366; width: 100%; max-width: 100%; overflow-x: auto; position: sticky; bottom: 0; right: 0px; overflow-y: hidden; white-space: nowrap; ">

    @for (int i = 1; i <= Model.Employees.Count(); i++)
    {
        <a href=@("#page"+i) class="pagerNumber" style="padding:0.9rem;">@i</a>
    }
</div>