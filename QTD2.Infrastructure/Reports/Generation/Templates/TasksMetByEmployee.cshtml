@using RazorEngine.Text
@using QTD2.Infrastructure.Reports.Generation
@using QTD2.Infrastructure.ExtensionMethods
<style>

    .table {
        font-family: Roboto, "Helvetica Neue", sans-serif;
        width: 100%;
        border-collapse: collapse;
        margin: 0;
    }

        .table td, .table th {
            padding: 0;
        }

    a.pagerNumber {
        text-decoration: none;
        background-color: white;
        color: black;
    }

        a.pagerNumber:hover {
            text-decoration: none;
            background-color: cornflowerblue;
            color: white;
        }

    .strip {
        margin: 10px 0px;
    }

    .strip-container .strip-dark {
        height: 10px;
        background-color: #e8e8e8;
    }

    tr.open-border-table-row th:first-child, tr.open-border-table-row td:first-child {
        padding-left: 0px !important;
        border-left: 0 !important;
    }

    tr.open-border-table-row th:last-child {
        border-right: 0 !important;
    }

    @@media print {
        .pager {
            display: none !important;
        }

        .strip-container .strip-dark {
            background-color: white;
        }
    }

    .progress-bar-container {
        position: relative;
        height: 20px;
        border-radius: 5px;
    }

    .progress-bar {
        height: 100%;
    }

    .progress-bar.red-bar {
        background-color: red;
     }

     .progress-bar.yellow-bar {
         background-color: yellow;
     }

     .progress-bar.green-bar {
          background-color: green;
     }

    .progress-text {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        font-weight: bold;
    }
</style>

<table id="content-table" class="table" style="border-collapse: collapse">
    <tr>
        <td colspan="12" style="vertical-align: middle; text-align: center; border: none !important;padding-bottom:0px">
            <div class="repeatedReportHeader" style="border-bottom: 3px solid #020378;padding-bottom:1px">
                <div style="display: -webkit-box; display: flex; align-items: center; -webkit-box-pack: justify;-webkit-box-align:center; justify-content: space-between; border-bottom: 3px solid #020378;">
                    @if (!string.IsNullOrEmpty(Model.CompanyLogo))
                    {
                        <div>
                            <img src="@Model.CompanyLogo" alt="Company logo" style="height: 46px;width: 65px;padding-bottom: 10px;float: left;width: 150px !important;height: 65px !important;object-fit: scale-down !important;" />
                        </div>
                    }
                    else
                    {
                        <div></div>
                    }
                    <div style="text-align: center; font-size: 24px; color: #020378;">
                        <b>@Model.Title </b>
                    </div>
                    <div><b>Printed Date:</b> @DateTime.Now.ConvertToDefaultTimeZone(Model.DefaultTimeZone).ToShortDateString()</div>
                </div>
            </div>
        </td>
    </tr>


    @if (Model.Employees.Count() > 0)
    {
        <tr>
            <td colspan="12" style="border: 0; padding: 0" class="strip-container">
                @{int j = 1;}

                @foreach (var employee in Model.Employees)
                {
                    <div class="@(j % 2 == 0 ? "strip-dark" : "")"></div>
                    <div style="padding:5px;" id="@("page" + j)" class="@(j % 2 == 0 ? "strip" : "")">
                        <table style="width:95% ;border-collapse:collapse;">
                            <tr>
                                @if (Model.DisplayColumns.Where(r => r == "Employee").Count() > 0)
                                {
                                    <td colspan="12" style="border:none;">
                                        <span><b style="color: #800000; font-size: 20px;">@("Employee".ReplaceLabel(Model.ClientSettings_LabelReplacements))</b> : </span>
                                        <span><b style="color: #800000; font-size: 20px;">@employee.Person?.LastName, @employee.Person?.FirstName  </b></span>
                                    </td>
                                }
                            </tr>

                            <tr>
                                @if (Model.DisplayColumns.Where(r => r == "Position").Count() > 0)
                                {
                                    <td colspan="12" style="border:none; padding:6px 0; ">
                                        <span><b style="font-size: 20px;">@("Position".ReplaceLabel(Model.ClientSettings_LabelReplacements))s</b> : </span>
                                        @{
                                            var employeePositions = employee.EmployeePositions.Select(x => x.Position.PositionTitle + " (" + x.Position.PositionAbbreviation + ")").Distinct().ToList();
                                            <span><b style="font-size: 20px;">@String.Join(", ", employeePositions)</b></span>
                                        }
                                    </td>
                                }
                            </tr>

                            <tr style="border-bottom: 2px solid #000; border-collapse: collapse">
                                @if (Model.DisplayColumns.Where(r => r == "Position").Count() > 0)
                                {
                                    <th style="border-bottom: 2px solid #000; text-align: center; border-top: 2px solid #000; border-right: 1px solid #000; border-collapse: collapse; vertical-align: bottom; padding: 5px; " rowspan="2">@("Position".ReplaceLabel(Model.ClientSettings_LabelReplacements))s</th>
                                }
                                @if (Model.DisplayColumns.Where(r => r == "Total Tasks").Count() > 0)
                                {
                                    <th style="border-bottom: 2px solid #000; border-right: 1px solid #000; border-top: 2px solid #000; text-align: center; vertical-align: bottom; padding: 5px;" rowspan="2">
                                        <span>Total @("Task".ReplaceLabel(Model.ClientSettings_LabelReplacements))s</span>
                                        <div style="display: -webkit-box; display: flex; align-items: center; -webkit-box-pack: justify; justify-content: center; margin: 0 0 3px 0;">
                                            <span style="color:red;">
                                                @{
                                                    var flags = new List<string>();
                                                    var hasPseudoTask = employee.EmployeePositions.Any(empPosition =>empPosition.Position.Position_Tasks.Any(pt => pt.Task.SubdutyArea.DutyArea.Letter == "P"));
                                                    var hasInactiveTask = employee.EmployeePositions.Any(empPosition => empPosition.Position.Position_Tasks.Any(pt => !pt.Task.Active));
                                                    if (Model.ReliabilityRelatedTask && employee.EmployeePositions.Any(empPosition => empPosition.Position.Position_Tasks.Any())) flags.Add("RR");
                                                    if (hasInactiveTask) flags.Add("Inactive");
                                                    if (hasPseudoTask) flags.Add("Pseudo");
                                                    if (flags.Any())
                                                    {
                                                        @($"({String.Join(" & ", flags)})")
                                                    }
                                                }
                                            </span>
                                        </div>
                                    </th>
                                }
                                @if (Model.DisplayColumns.Where(r => r == "Completed Tasks").Count() > 0)
                                {
                                    <th style="border-bottom: 2px solid #000; border-right: 1px solid #000; border-top: 2px solid #000; text-align: center; vertical-align: bottom; padding: 5px;" rowspan="2">Completed @("Task".ReplaceLabel(Model.ClientSettings_LabelReplacements))s</th>
                                }
                                <th style="border-bottom: 2px solid #000;border-top: 2px solid #000; text-align: center; vertical-align: bottom; padding: 5px;" colspan="11">Percentage Completed</th>
                            </tr>
                            <tr>
                                <th style="border-bottom: 2px solid #000; text-align: center; vertical-align: bottom; padding: 5px;">0</th>
                                <th style="border-bottom: 2px solid #000; text-align: center; vertical-align: bottom; padding: 5px;">10</th>
                                <th style="border-bottom: 2px solid #000; text-align: center; vertical-align: bottom; padding: 5px;">20</th>
                                <th style="border-bottom: 2px solid #000; text-align: center; vertical-align: bottom; padding: 5px;">30</th>
                                <th style="border-bottom: 2px solid #000; text-align: center; vertical-align: bottom; padding: 5px;">40</th>
                                <th style="border-bottom: 2px solid #000; text-align: center; vertical-align: bottom; padding: 5px;">50</th>
                                <th style="border-bottom: 2px solid #000; text-align: center; vertical-align: bottom; padding: 5px;">60</th>
                                <th style="border-bottom: 2px solid #000; text-align: center; vertical-align: bottom; padding: 5px;">70</th>
                                <th style="border-bottom: 2px solid #000; text-align: center; vertical-align: bottom; padding: 5px;">80</th>
                                <th style="border-bottom: 2px solid #000; text-align: center; vertical-align: bottom; padding: 5px;">90</th>
                                <th style="border-bottom: 2px solid #000; text-align: center; vertical-align: bottom; padding: 5px;">100</th>
                            </tr>

                            @foreach (var empPosition in employee.EmployeePositions)
                            {
                                @{
                                    var totalTasksCount = empPosition.Position.Position_Tasks.Count();
                                    var completedTasks = empPosition.Position.Position_Tasks.Where(pt => empPosition.Employee.TaskQualifications
                                    .Any(tq => tq.TaskId == pt.TaskId && tq.CriteriaMet && tq.TaskQualificationDate != null)).Count();
                                    var percentageCompleted = totalTasksCount > 0 ? (completedTasks * 100) / totalTasksCount : 0;
                                    var progressBarClass = percentageCompleted >= 1 && percentageCompleted <= 40 ? "red-bar" :
                                                            percentageCompleted >= 41 && percentageCompleted <= 50 ? "yellow-bar" :
                                                            "green-bar";

                                }
                                <tr style="padding: 10px;">
                                    @if (Model.DisplayColumns.Where(r => r == "Position").Count() > 0)
                                    {
                                        <td style="border: none; padding: 5px; vertical-align: top; text-align: center;">
                                            @empPosition.Position.PositionTitle @(empPosition.Trainee ? "[Trainee]" : "")
                                        </td>
                                    }
                                    @if (Model.DisplayColumns.Where(r => r == "Total Tasks").Count() > 0)
                                    {
                                        <td style="border: none; padding: 5px; vertical-align: top; text-align: center;">
                                            @totalTasksCount
                                        </td>
                                    }
                                    @if (Model.DisplayColumns.Where(r => r == "Completed Tasks").Count() > 0)
                                    {
                                        <td style="border: none; padding: 5px; vertical-align: top; text-align: center;">
                                            @completedTasks
                                        </td>
                                    }

                                    @if (percentageCompleted > 0)
                                    {
                                        <td style="border: none; padding: 5px; vertical-align: top; text-align: left;" colspan="@((percentageCompleted / 10) + 1)">
                                            <div class="progress-bar-container" style="position: relative; height: 20px; width: 100%;">
                                                <div class="progress-bar @progressBarClass"></div>
                                                <div class="progress-text" style="position: absolute; left: 100%; white-space: nowrap; margin-left: 5px;">@percentageCompleted%</div>
                                            </div>
                                        </td>
                                    }
                                    else
                                    {
                                        <td style="border: none; padding: 5px; vertical-align: top; text-align: center;">
                                            @percentageCompleted%
                                        </td>
                                    }
                                </tr>
                            }
                                <tr></tr>
                        </table>
                    </div>

                    @if (!employee.Equals(Model.Employees.Last()))
                    {
                        <div style="page-break-after:always"></div>
                        <div class="@(j%2==0?"strip-dark":"")"></div>
                    }
                    @{j++;
                    }
                }
            </td>
        </tr>
    }
    else
    {
        <tr style="border:none">
            <td style="border:none;text-align:center">
                <i>No data available to generate requested report</i>
            </td>
        </tr>
    }
</table>

<div class="pager pdf-remove" id="pager" style="display: flex; justify-content: flex-start; align-items: center; background-color: white; border-top: 1px solid #d5d3d366; width: 100%; max-width: 100%; overflow-x: auto; position: sticky; bottom: 0; right: 0px; overflow-y: hidden; white-space: nowrap; ">

    @for (int i = 1; i <= Model.Employees.Count(); i++)
    {
        <a href=@("#page"+i) class="pagerNumber" style="padding:0.9rem;">@i</a>
    }
</div>
